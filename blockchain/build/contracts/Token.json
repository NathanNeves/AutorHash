{
  "contractName": "Token",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "int8",
          "name": "",
          "type": "int8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "minter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "remaining",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"int8\",\"name\":\"\",\"type\":\"int8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"params\":{\"_owner\":\"The address of the account owning tokens\",\"_spender\":\"The address of the account able to transfer the tokens\"},\"returns\":{\"remaining\":\"Amount of remaining tokens allowed to spent\"}},\"approve(address,uint256)\":{\"params\":{\"_spender\":\"The address of the account able to transfer the tokens\",\"_value\":\"The amount of tokens to be approved for transfer\"},\"returns\":{\"success\":\"Whether the approval was successful or not\"}},\"balanceOf(address)\":{\"params\":{\"_owner\":\"The address from which the balance will be retrieved\"},\"returns\":{\"balance\":\"The balance\"}},\"transfer(address,uint256)\":{\"params\":{\"_to\":\"The address of the recipient\",\"_value\":\"The amount of token to be transferred\"},\"returns\":{\"success\":\"Whether the transfer was successful or not\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"_from\":\"The address of the sender\",\"_to\":\"The address of the recipient\",\"_value\":\"The amount of token to be transferred\"},\"returns\":{\"success\":\"Whether the transfer was successful or not\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"`msg.sender` approves `_spender` to spend `_value` tokens\"},\"transfer(address,uint256)\":{\"notice\":\"send `_value` token to `_to` from `msg.sender`\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"send `_value` token to `_to` from `_from` on the condition it is approved by `_from`\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Apsota.sol\":\"Apsota\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Apsota.sol\":{\"keccak256\":\"0x7814fd13a1948a2e551e470a2ab610e4cb57ffa669c41aedb4ea9dcb1fb77640\",\"urls\":[\"bzz-raw://732a3a3b77380769b5d5a8451bb35b83ed40c9c64187ad09ce4b3b4960c90278\",\"dweb:/ipfs/QmbGtLAFwtJRuQ4Gdhqt2HVRihejb6hv5yjVK3EYBzbBqs\"]},\"project:/contracts/IERC20.sol\":{\"keccak256\":\"0xf0bd660bbe979a93fab866a8bb65989bc5ca6136eb56273a91902a4f94363a81\",\"license\":\"MIT LICENSE\",\"urls\":[\"bzz-raw://983807931010a0a7969230ec6f42af14716239cca5eac202f20f37caa7aec6d8\",\"dweb:/ipfs/QmV7EAuuedo1muFVBuinmaLf7ZhHrY6KzgpmPZpyTDe6ME\"]}},\"version\":1}",
  "bytecode": "0x6080604052670de0b6b3a76400006004553480156200001d57600080fd5b506040518060400160405280600381526020017f4154430000000000000000000000000000000000000000000000000000000000815250600390805190602001906200006b929190620000b8565b50600454600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550620001cd565b828054620000c69062000197565b90600052602060002090601f016020900481019282620000ea576000855562000136565b82601f106200010557805160ff191683800117855562000136565b8280016001018555821562000136579182015b828111156200013557825182559160200191906001019062000118565b5b50905062000145919062000149565b5090565b5b80821115620001645760008160009055506001016200014a565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620001b057607f821691505b60208210811415620001c757620001c662000168565b5b50919050565b610fd680620001dd6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063313ce56711610071578063313ce567146101a35780635c658165146101c157806370a08231146101f157806395d89b4114610221578063a9059cbb1461023f578063dd62ed3e1461026f576100b4565b806307546172146100b9578063095ea7b3146100d75780631249c58b1461010757806318160ddd1461012557806323b872dd1461014357806327e235e314610173575b600080fd5b6100c161029f565b6040516100ce9190610af8565b60405180910390f35b6100f160048036038101906100ec9190610b7a565b6102c3565b6040516100fe9190610bd5565b60405180910390f35b61010f6103b5565b60405161011c9190610bd5565b60405180910390f35b61012d61046b565b60405161013a9190610bff565b60405180910390f35b61015d60048036038101906101589190610c1a565b610471565b60405161016a9190610bd5565b60405180910390f35b61018d60048036038101906101889190610c6d565b610769565b60405161019a9190610bff565b60405180910390f35b6101ab610781565b6040516101b89190610cb6565b60405180910390f35b6101db60048036038101906101d69190610cd1565b610786565b6040516101e89190610bff565b60405180910390f35b61020b60048036038101906102069190610c6d565b6107ab565b6040516102189190610bff565b60405180910390f35b6102296107f4565b6040516102369190610daa565b60405180910390f35b61025960048036038101906102549190610b7a565b610882565b6040516102669190610bd5565b60405180910390f35b61028960048036038101906102849190610cd1565b610a30565b6040516102969190610bff565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516103a39190610bff565b60405180910390a36001905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461041057600080fd5b6000606460146004546104239190610dfb565b61042d9190610e84565b905060045481111561043e57600080fd5b60088161044b9190610dfb565b6004600082825461045c9190610eb5565b92505081905550600191505090565b60045481565b600080600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101580156105425750828110155b61054b57600080fd5b6000606460038561055c9190610dfb565b6105669190610e84565b9050806004600082825461057a9190610f0b565b92505081905550808461058d9190610f0b565b935083600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105de9190610eb5565b9250508190555083600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106349190610f0b565b925050819055507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8210156106f75783600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106ef9190610f0b565b925050819055505b8473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef866040516107549190610bff565b60405180910390a36001925050509392505050565b60016020528060005260406000206000915090505481565b600a81565b6002602052816000526040600020602052806000526040600020600091509150505481565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6003805461080190610f6e565b80601f016020809104026020016040519081016040528092919081815260200182805461082d90610f6e565b801561087a5780601f1061084f5761010080835404028352916020019161087a565b820191906000526020600020905b81548152906001019060200180831161085d57829003601f168201915b505050505081565b600081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156108d057600080fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461091f9190610f0b565b92505081905550600060646003846109379190610dfb565b6109419190610e84565b905080600460008282546109559190610f0b565b9250508190555080836109689190610f0b565b925082600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109b99190610eb5565b925050819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef85604051610a1d9190610bff565b60405180910390a3600191505092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ae282610ab7565b9050919050565b610af281610ad7565b82525050565b6000602082019050610b0d6000830184610ae9565b92915050565b600080fd5b610b2181610ad7565b8114610b2c57600080fd5b50565b600081359050610b3e81610b18565b92915050565b6000819050919050565b610b5781610b44565b8114610b6257600080fd5b50565b600081359050610b7481610b4e565b92915050565b60008060408385031215610b9157610b90610b13565b5b6000610b9f85828601610b2f565b9250506020610bb085828601610b65565b9150509250929050565b60008115159050919050565b610bcf81610bba565b82525050565b6000602082019050610bea6000830184610bc6565b92915050565b610bf981610b44565b82525050565b6000602082019050610c146000830184610bf0565b92915050565b600080600060608486031215610c3357610c32610b13565b5b6000610c4186828701610b2f565b9350506020610c5286828701610b2f565b9250506040610c6386828701610b65565b9150509250925092565b600060208284031215610c8357610c82610b13565b5b6000610c9184828501610b2f565b91505092915050565b60008160000b9050919050565b610cb081610c9a565b82525050565b6000602082019050610ccb6000830184610ca7565b92915050565b60008060408385031215610ce857610ce7610b13565b5b6000610cf685828601610b2f565b9250506020610d0785828601610b2f565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d4b578082015181840152602081019050610d30565b83811115610d5a576000848401525b50505050565b6000601f19601f8301169050919050565b6000610d7c82610d11565b610d868185610d1c565b9350610d96818560208601610d2d565b610d9f81610d60565b840191505092915050565b60006020820190508181036000830152610dc48184610d71565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e0682610b44565b9150610e1183610b44565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e4a57610e49610dcc565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e8f82610b44565b9150610e9a83610b44565b925082610eaa57610ea9610e55565b5b828204905092915050565b6000610ec082610b44565b9150610ecb83610b44565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f0057610eff610dcc565b5b828201905092915050565b6000610f1682610b44565b9150610f2183610b44565b925082821015610f3457610f33610dcc565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610f8657607f821691505b60208210811415610f9a57610f99610f3f565b5b5091905056fea2646970667358221220ac65b6da2c63677b5d8e14dbe7ece37b12a17d505a411c3bf7a6df8cd6452c9664736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c8063313ce56711610071578063313ce567146101a35780635c658165146101c157806370a08231146101f157806395d89b4114610221578063a9059cbb1461023f578063dd62ed3e1461026f576100b4565b806307546172146100b9578063095ea7b3146100d75780631249c58b1461010757806318160ddd1461012557806323b872dd1461014357806327e235e314610173575b600080fd5b6100c161029f565b6040516100ce9190610af8565b60405180910390f35b6100f160048036038101906100ec9190610b7a565b6102c3565b6040516100fe9190610bd5565b60405180910390f35b61010f6103b5565b60405161011c9190610bd5565b60405180910390f35b61012d61046b565b60405161013a9190610bff565b60405180910390f35b61015d60048036038101906101589190610c1a565b610471565b60405161016a9190610bd5565b60405180910390f35b61018d60048036038101906101889190610c6d565b610769565b60405161019a9190610bff565b60405180910390f35b6101ab610781565b6040516101b89190610cb6565b60405180910390f35b6101db60048036038101906101d69190610cd1565b610786565b6040516101e89190610bff565b60405180910390f35b61020b60048036038101906102069190610c6d565b6107ab565b6040516102189190610bff565b60405180910390f35b6102296107f4565b6040516102369190610daa565b60405180910390f35b61025960048036038101906102549190610b7a565b610882565b6040516102669190610bd5565b60405180910390f35b61028960048036038101906102849190610cd1565b610a30565b6040516102969190610bff565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516103a39190610bff565b60405180910390a36001905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461041057600080fd5b6000606460146004546104239190610dfb565b61042d9190610e84565b905060045481111561043e57600080fd5b60088161044b9190610dfb565b6004600082825461045c9190610eb5565b92505081905550600191505090565b60045481565b600080600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101580156105425750828110155b61054b57600080fd5b6000606460038561055c9190610dfb565b6105669190610e84565b9050806004600082825461057a9190610f0b565b92505081905550808461058d9190610f0b565b935083600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105de9190610eb5565b9250508190555083600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106349190610f0b565b925050819055507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8210156106f75783600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106ef9190610f0b565b925050819055505b8473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef866040516107549190610bff565b60405180910390a36001925050509392505050565b60016020528060005260406000206000915090505481565b600a81565b6002602052816000526040600020602052806000526040600020600091509150505481565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6003805461080190610f6e565b80601f016020809104026020016040519081016040528092919081815260200182805461082d90610f6e565b801561087a5780601f1061084f5761010080835404028352916020019161087a565b820191906000526020600020905b81548152906001019060200180831161085d57829003601f168201915b505050505081565b600081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156108d057600080fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461091f9190610f0b565b92505081905550600060646003846109379190610dfb565b6109419190610e84565b905080600460008282546109559190610f0b565b9250508190555080836109689190610f0b565b925082600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109b99190610eb5565b925050819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef85604051610a1d9190610bff565b60405180910390a3600191505092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ae282610ab7565b9050919050565b610af281610ad7565b82525050565b6000602082019050610b0d6000830184610ae9565b92915050565b600080fd5b610b2181610ad7565b8114610b2c57600080fd5b50565b600081359050610b3e81610b18565b92915050565b6000819050919050565b610b5781610b44565b8114610b6257600080fd5b50565b600081359050610b7481610b4e565b92915050565b60008060408385031215610b9157610b90610b13565b5b6000610b9f85828601610b2f565b9250506020610bb085828601610b65565b9150509250929050565b60008115159050919050565b610bcf81610bba565b82525050565b6000602082019050610bea6000830184610bc6565b92915050565b610bf981610b44565b82525050565b6000602082019050610c146000830184610bf0565b92915050565b600080600060608486031215610c3357610c32610b13565b5b6000610c4186828701610b2f565b9350506020610c5286828701610b2f565b9250506040610c6386828701610b65565b9150509250925092565b600060208284031215610c8357610c82610b13565b5b6000610c9184828501610b2f565b91505092915050565b60008160000b9050919050565b610cb081610c9a565b82525050565b6000602082019050610ccb6000830184610ca7565b92915050565b60008060408385031215610ce857610ce7610b13565b5b6000610cf685828601610b2f565b9250506020610d0785828601610b2f565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d4b578082015181840152602081019050610d30565b83811115610d5a576000848401525b50505050565b6000601f19601f8301169050919050565b6000610d7c82610d11565b610d868185610d1c565b9350610d96818560208601610d2d565b610d9f81610d60565b840191505092915050565b60006020820190508181036000830152610dc48184610d71565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e0682610b44565b9150610e1183610b44565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e4a57610e49610dcc565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e8f82610b44565b9150610e9a83610b44565b925082610eaa57610ea9610e55565b5b828204905092915050565b6000610ec082610b44565b9150610ecb83610b44565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f0057610eff610dcc565b5b828201905092915050565b6000610f1682610b44565b9150610f2183610b44565b925082821015610f3457610f33610dcc565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610f8657607f821691505b60208210811415610f9a57610f99610f3f565b5b5091905056fea2646970667358221220ac65b6da2c63677b5d8e14dbe7ece37b12a17d505a411c3bf7a6df8cd6452c9664736f6c63430008090033",
=======
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"int8\",\"name\":\"\",\"type\":\"int8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"params\":{\"_owner\":\"The address of the account owning tokens\",\"_spender\":\"The address of the account able to transfer the tokens\"},\"returns\":{\"remaining\":\"Amount of remaining tokens allowed to spent\"}},\"approve(address,uint256)\":{\"params\":{\"_spender\":\"The address of the account able to transfer the tokens\",\"_value\":\"The amount of tokens to be approved for transfer\"},\"returns\":{\"success\":\"Whether the approval was successful or not\"}},\"balanceOf(address)\":{\"params\":{\"_owner\":\"The address from which the balance will be retrieved\"},\"returns\":{\"balance\":\"The balance\"}},\"transfer(address,uint256)\":{\"params\":{\"_to\":\"The address of the recipient\",\"_value\":\"The amount of token to be transferred\"},\"returns\":{\"success\":\"Whether the transfer was successful or not\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"_from\":\"The address of the sender\",\"_to\":\"The address of the recipient\",\"_value\":\"The amount of token to be transferred\"},\"returns\":{\"success\":\"Whether the transfer was successful or not\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"`msg.sender` approves `_spender` to spend `_value` tokens\"},\"transfer(address,uint256)\":{\"notice\":\"send `_value` token to `_to` from `msg.sender`\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"send `_value` token to `_to` from `_from` on the condition it is approved by `_from`\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Token.sol\":\"Token\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/IERC20.sol\":{\"keccak256\":\"0xf0bd660bbe979a93fab866a8bb65989bc5ca6136eb56273a91902a4f94363a81\",\"license\":\"MIT LICENSE\",\"urls\":[\"bzz-raw://983807931010a0a7969230ec6f42af14716239cca5eac202f20f37caa7aec6d8\",\"dweb:/ipfs/QmV7EAuuedo1muFVBuinmaLf7ZhHrY6KzgpmPZpyTDe6ME\"]},\"project:/contracts/Token.sol\":{\"keccak256\":\"0x9d2f73ebd4ee683a8c3bd8e1cc1be22c52794c2b7d9b8d6528079c2919241371\",\"urls\":[\"bzz-raw://848a9d1a6694fce7022f9fa7645e745096e47fade52510a7be791fc82dde8ce6\",\"dweb:/ipfs/QmPHVvFhJiRtYhpa2gC9SGTNSRELztBwWr41tBnyCUfSLj\"]}},\"version\":1}",
  "bytecode": "0x6080604052670de0b6b3a76400006004553480156200001d57600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040518060400160405280600381526020017f417574000000000000000000000000000000000000000000000000000000000081525060039080519060200190620000ab929190620000b2565b50620001c7565b828054620000c09062000191565b90600052602060002090601f016020900481019282620000e4576000855562000130565b82601f10620000ff57805160ff191683800117855562000130565b8280016001018555821562000130579182015b828111156200012f57825182559160200191906001019062000112565b5b5090506200013f919062000143565b5090565b5b808211156200015e57600081600090555060010162000144565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620001aa57607f821691505b60208210811415620001c157620001c062000162565b5b50919050565b610fd680620001d76000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063313ce56711610071578063313ce567146101a35780635c658165146101c157806370a08231146101f157806395d89b4114610221578063a9059cbb1461023f578063dd62ed3e1461026f576100b4565b806307546172146100b9578063095ea7b3146100d75780631249c58b1461010757806318160ddd1461012557806323b872dd1461014357806327e235e314610173575b600080fd5b6100c161029f565b6040516100ce9190610af8565b60405180910390f35b6100f160048036038101906100ec9190610b7a565b6102c3565b6040516100fe9190610bd5565b60405180910390f35b61010f6103b5565b60405161011c9190610bd5565b60405180910390f35b61012d61046b565b60405161013a9190610bff565b60405180910390f35b61015d60048036038101906101589190610c1a565b610471565b60405161016a9190610bd5565b60405180910390f35b61018d60048036038101906101889190610c6d565b610769565b60405161019a9190610bff565b60405180910390f35b6101ab610781565b6040516101b89190610cb6565b60405180910390f35b6101db60048036038101906101d69190610cd1565b610786565b6040516101e89190610bff565b60405180910390f35b61020b60048036038101906102069190610c6d565b6107ab565b6040516102189190610bff565b60405180910390f35b6102296107f4565b6040516102369190610daa565b60405180910390f35b61025960048036038101906102549190610b7a565b610882565b6040516102669190610bd5565b60405180910390f35b61028960048036038101906102849190610cd1565b610a30565b6040516102969190610bff565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516103a39190610bff565b60405180910390a36001905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461041057600080fd5b6000606460146004546104239190610dfb565b61042d9190610e84565b905060045481111561043e57600080fd5b60088161044b9190610dfb565b6004600082825461045c9190610eb5565b92505081905550600191505090565b60045481565b600080600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101580156105425750828110155b61054b57600080fd5b6000606460038561055c9190610dfb565b6105669190610e84565b9050806004600082825461057a9190610f0b565b92505081905550808461058d9190610f0b565b935083600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105de9190610eb5565b9250508190555083600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106349190610f0b565b925050819055507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8210156106f75783600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106ef9190610f0b565b925050819055505b8473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef866040516107549190610bff565b60405180910390a36001925050509392505050565b60016020528060005260406000206000915090505481565b600a81565b6002602052816000526040600020602052806000526040600020600091509150505481565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6003805461080190610f6e565b80601f016020809104026020016040519081016040528092919081815260200182805461082d90610f6e565b801561087a5780601f1061084f5761010080835404028352916020019161087a565b820191906000526020600020905b81548152906001019060200180831161085d57829003601f168201915b505050505081565b600081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156108d057600080fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461091f9190610f0b565b92505081905550600060646003846109379190610dfb565b6109419190610e84565b905080600460008282546109559190610f0b565b9250508190555080836109689190610f0b565b925082600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109b99190610eb5565b925050819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef85604051610a1d9190610bff565b60405180910390a3600191505092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ae282610ab7565b9050919050565b610af281610ad7565b82525050565b6000602082019050610b0d6000830184610ae9565b92915050565b600080fd5b610b2181610ad7565b8114610b2c57600080fd5b50565b600081359050610b3e81610b18565b92915050565b6000819050919050565b610b5781610b44565b8114610b6257600080fd5b50565b600081359050610b7481610b4e565b92915050565b60008060408385031215610b9157610b90610b13565b5b6000610b9f85828601610b2f565b9250506020610bb085828601610b65565b9150509250929050565b60008115159050919050565b610bcf81610bba565b82525050565b6000602082019050610bea6000830184610bc6565b92915050565b610bf981610b44565b82525050565b6000602082019050610c146000830184610bf0565b92915050565b600080600060608486031215610c3357610c32610b13565b5b6000610c4186828701610b2f565b9350506020610c5286828701610b2f565b9250506040610c6386828701610b65565b9150509250925092565b600060208284031215610c8357610c82610b13565b5b6000610c9184828501610b2f565b91505092915050565b60008160000b9050919050565b610cb081610c9a565b82525050565b6000602082019050610ccb6000830184610ca7565b92915050565b60008060408385031215610ce857610ce7610b13565b5b6000610cf685828601610b2f565b9250506020610d0785828601610b2f565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d4b578082015181840152602081019050610d30565b83811115610d5a576000848401525b50505050565b6000601f19601f8301169050919050565b6000610d7c82610d11565b610d868185610d1c565b9350610d96818560208601610d2d565b610d9f81610d60565b840191505092915050565b60006020820190508181036000830152610dc48184610d71565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e0682610b44565b9150610e1183610b44565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e4a57610e49610dcc565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e8f82610b44565b9150610e9a83610b44565b925082610eaa57610ea9610e55565b5b828204905092915050565b6000610ec082610b44565b9150610ecb83610b44565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f0057610eff610dcc565b5b828201905092915050565b6000610f1682610b44565b9150610f2183610b44565b925082821015610f3457610f33610dcc565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610f8657607f821691505b60208210811415610f9a57610f99610f3f565b5b5091905056fea26469706673582212208b8fa1341bec2bde6357467309347b9b3bd40293b1b7336014c5da332bd4bf1364736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c8063313ce56711610071578063313ce567146101a35780635c658165146101c157806370a08231146101f157806395d89b4114610221578063a9059cbb1461023f578063dd62ed3e1461026f576100b4565b806307546172146100b9578063095ea7b3146100d75780631249c58b1461010757806318160ddd1461012557806323b872dd1461014357806327e235e314610173575b600080fd5b6100c161029f565b6040516100ce9190610af8565b60405180910390f35b6100f160048036038101906100ec9190610b7a565b6102c3565b6040516100fe9190610bd5565b60405180910390f35b61010f6103b5565b60405161011c9190610bd5565b60405180910390f35b61012d61046b565b60405161013a9190610bff565b60405180910390f35b61015d60048036038101906101589190610c1a565b610471565b60405161016a9190610bd5565b60405180910390f35b61018d60048036038101906101889190610c6d565b610769565b60405161019a9190610bff565b60405180910390f35b6101ab610781565b6040516101b89190610cb6565b60405180910390f35b6101db60048036038101906101d69190610cd1565b610786565b6040516101e89190610bff565b60405180910390f35b61020b60048036038101906102069190610c6d565b6107ab565b6040516102189190610bff565b60405180910390f35b6102296107f4565b6040516102369190610daa565b60405180910390f35b61025960048036038101906102549190610b7a565b610882565b6040516102669190610bd5565b60405180910390f35b61028960048036038101906102849190610cd1565b610a30565b6040516102969190610bff565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516103a39190610bff565b60405180910390a36001905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461041057600080fd5b6000606460146004546104239190610dfb565b61042d9190610e84565b905060045481111561043e57600080fd5b60088161044b9190610dfb565b6004600082825461045c9190610eb5565b92505081905550600191505090565b60045481565b600080600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101580156105425750828110155b61054b57600080fd5b6000606460038561055c9190610dfb565b6105669190610e84565b9050806004600082825461057a9190610f0b565b92505081905550808461058d9190610f0b565b935083600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105de9190610eb5565b9250508190555083600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106349190610f0b565b925050819055507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8210156106f75783600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106ef9190610f0b565b925050819055505b8473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef866040516107549190610bff565b60405180910390a36001925050509392505050565b60016020528060005260406000206000915090505481565b600a81565b6002602052816000526040600020602052806000526040600020600091509150505481565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6003805461080190610f6e565b80601f016020809104026020016040519081016040528092919081815260200182805461082d90610f6e565b801561087a5780601f1061084f5761010080835404028352916020019161087a565b820191906000526020600020905b81548152906001019060200180831161085d57829003601f168201915b505050505081565b600081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156108d057600080fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461091f9190610f0b565b92505081905550600060646003846109379190610dfb565b6109419190610e84565b905080600460008282546109559190610f0b565b9250508190555080836109689190610f0b565b925082600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109b99190610eb5565b925050819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef85604051610a1d9190610bff565b60405180910390a3600191505092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ae282610ab7565b9050919050565b610af281610ad7565b82525050565b6000602082019050610b0d6000830184610ae9565b92915050565b600080fd5b610b2181610ad7565b8114610b2c57600080fd5b50565b600081359050610b3e81610b18565b92915050565b6000819050919050565b610b5781610b44565b8114610b6257600080fd5b50565b600081359050610b7481610b4e565b92915050565b60008060408385031215610b9157610b90610b13565b5b6000610b9f85828601610b2f565b9250506020610bb085828601610b65565b9150509250929050565b60008115159050919050565b610bcf81610bba565b82525050565b6000602082019050610bea6000830184610bc6565b92915050565b610bf981610b44565b82525050565b6000602082019050610c146000830184610bf0565b92915050565b600080600060608486031215610c3357610c32610b13565b5b6000610c4186828701610b2f565b9350506020610c5286828701610b2f565b9250506040610c6386828701610b65565b9150509250925092565b600060208284031215610c8357610c82610b13565b5b6000610c9184828501610b2f565b91505092915050565b60008160000b9050919050565b610cb081610c9a565b82525050565b6000602082019050610ccb6000830184610ca7565b92915050565b60008060408385031215610ce857610ce7610b13565b5b6000610cf685828601610b2f565b9250506020610d0785828601610b2f565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d4b578082015181840152602081019050610d30565b83811115610d5a576000848401525b50505050565b6000601f19601f8301169050919050565b6000610d7c82610d11565b610d868185610d1c565b9350610d96818560208601610d2d565b610d9f81610d60565b840191505092915050565b60006020820190508181036000830152610dc48184610d71565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e0682610b44565b9150610e1183610b44565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e4a57610e49610dcc565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e8f82610b44565b9150610e9a83610b44565b925082610eaa57610ea9610e55565b5b828204905092915050565b6000610ec082610b44565b9150610ecb83610b44565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f0057610eff610dcc565b5b828201905092915050565b6000610f1682610b44565b9150610f2183610b44565b925082821015610f3457610f33610dcc565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610f8657607f821691505b60208210811415610f9a57610f99610f3f565b5b5091905056fea26469706673582212208b8fa1341bec2bde6357467309347b9b3bd40293b1b7336014c5da332bd4bf1364736f6c63430008090033",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:516:16",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "35:152:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "52:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "55:77:16",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "45:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "45:88:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "45:88:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "149:1:16",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "152:4:16",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "142:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "142:15:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "142:15:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "173:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "176:4:16",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "166:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "166:15:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "166:15:16"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "7:180:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "244:269:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "254:22:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "268:4:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "274:1:16",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "264:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "264:12:16"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "254:6:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "285:38:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "315:4:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "321:1:16",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "311:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "311:12:16"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "289:18:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "362:51:16",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "376:27:16",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "390:6:16"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "398:4:16",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "386:3:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "386:17:16"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "376:6:16"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "342:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "335:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "335:26:16"
                  },
                  "nodeType": "YulIf",
                  "src": "332:81:16"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "465:42:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "479:16:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "479:18:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "479:18:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "429:18:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "452:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "460:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "449:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "449:14:16"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "426:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "426:38:16"
                  },
                  "nodeType": "YulIf",
                  "src": "423:84:16"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "228:4:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "237:6:16",
                "type": ""
              }
            ],
            "src": "193:320:16"
          }
        ]
      },
      "contents": "{\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n",
      "id": 16,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:7998:16",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:81:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:65:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "77:5:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "84:42:16",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "73:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "73:54:16"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:16"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:16",
                "type": ""
              }
            ],
            "src": "7:126:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "184:51:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "194:35:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "223:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "205:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "205:24:16"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "194:7:16"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "166:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "176:7:16",
                "type": ""
              }
            ],
            "src": "139:96:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "306:53:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "323:3:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "346:5:16"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "328:17:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "328:24:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "316:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "316:37:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "316:37:16"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "294:5:16",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "301:3:16",
                "type": ""
              }
            ],
            "src": "241:118:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "463:124:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "473:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "485:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "496:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "481:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "481:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "473:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "553:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "566:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "577:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "562:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "562:17:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "509:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "509:71:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "509:71:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "435:9:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "447:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "458:4:16",
                "type": ""
              }
            ],
            "src": "365:222:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "633:35:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "643:19:16",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "659:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "653:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "653:9:16"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "643:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "626:6:16",
                "type": ""
              }
            ],
            "src": "593:75:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "763:28:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "780:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "783:1:16",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "773:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "773:12:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "773:12:16"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "674:117:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "886:28:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "903:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "906:1:16",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "896:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "896:12:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "896:12:16"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "797:117:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "963:79:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1020:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1029:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1032:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1022:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1022:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1022:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "986:5:16"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1011:5:16"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "993:17:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "993:24:16"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "983:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "983:35:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "976:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "976:43:16"
                  },
                  "nodeType": "YulIf",
                  "src": "973:63:16"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "956:5:16",
                "type": ""
              }
            ],
            "src": "920:122:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1100:87:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1110:29:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1132:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1119:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1119:20:16"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1110:5:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1175:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1148:26:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1148:33:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1148:33:16"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1078:6:16",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1086:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1094:5:16",
                "type": ""
              }
            ],
            "src": "1048:139:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1238:32:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1248:16:16",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1259:5:16"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1248:7:16"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1220:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1230:7:16",
                "type": ""
              }
            ],
            "src": "1193:77:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1319:79:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1376:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1385:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1388:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1378:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1378:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1378:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1342:5:16"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1367:5:16"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "1349:17:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1349:24:16"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1339:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1339:35:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1332:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1332:43:16"
                  },
                  "nodeType": "YulIf",
                  "src": "1329:63:16"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1312:5:16",
                "type": ""
              }
            ],
            "src": "1276:122:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1456:87:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1466:29:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1488:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1475:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1475:20:16"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1466:5:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1531:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1504:26:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1504:33:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1504:33:16"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1434:6:16",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1442:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1450:5:16",
                "type": ""
              }
            ],
            "src": "1404:139:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1632:391:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1678:83:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1680:77:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1680:79:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1680:79:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1653:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1662:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1649:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1649:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1674:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1645:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1645:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "1642:119:16"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1771:117:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1786:15:16",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1800:1:16",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1790:6:16",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1815:63:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1850:9:16"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1861:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1846:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1846:22:16"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1870:7:16"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1825:20:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1825:53:16"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1815:6:16"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1898:118:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1913:16:16",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1927:2:16",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1917:6:16",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1943:63:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1978:9:16"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1989:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1974:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1974:22:16"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1998:7:16"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1953:20:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1953:53:16"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1943:6:16"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1594:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1605:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1617:6:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1625:6:16",
                "type": ""
              }
            ],
            "src": "1549:474:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2071:48:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2081:32:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2106:5:16"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2099:6:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2099:13:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2092:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2092:21:16"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2081:7:16"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2053:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2063:7:16",
                "type": ""
              }
            ],
            "src": "2029:90:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2184:50:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2201:3:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2221:5:16"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "2206:14:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2206:21:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2194:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2194:34:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2194:34:16"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2172:5:16",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2179:3:16",
                "type": ""
              }
            ],
            "src": "2125:109:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2332:118:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2342:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2354:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2365:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2350:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2350:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2342:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2416:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2429:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2440:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2425:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2425:17:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2378:37:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2378:65:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2378:65:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2304:9:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2316:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2327:4:16",
                "type": ""
              }
            ],
            "src": "2240:210:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2521:53:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2538:3:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2561:5:16"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2543:17:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2543:24:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2531:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2531:37:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2531:37:16"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2509:5:16",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2516:3:16",
                "type": ""
              }
            ],
            "src": "2456:118:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2678:124:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2688:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2700:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2711:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2696:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2696:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2688:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2768:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2781:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2792:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2777:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2777:17:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2724:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2724:71:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2724:71:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2650:9:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2662:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2673:4:16",
                "type": ""
              }
            ],
            "src": "2580:222:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2908:519:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2954:83:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2956:77:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2956:79:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2956:79:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2929:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2938:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2925:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2925:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2950:2:16",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2921:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2921:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "2918:119:16"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3047:117:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3062:15:16",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3076:1:16",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3066:6:16",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3091:63:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3126:9:16"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3137:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3122:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3122:22:16"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3146:7:16"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3101:20:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3101:53:16"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3091:6:16"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3174:118:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3189:16:16",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3203:2:16",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3193:6:16",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3219:63:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3254:9:16"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3265:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3250:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3250:22:16"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3274:7:16"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3229:20:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3229:53:16"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3219:6:16"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3302:118:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3317:16:16",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3331:2:16",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3321:6:16",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3347:63:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3382:9:16"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3393:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3378:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3378:22:16"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3402:7:16"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3357:20:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3357:53:16"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "3347:6:16"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2862:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2873:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2885:6:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2893:6:16",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2901:6:16",
                "type": ""
              }
            ],
            "src": "2808:619:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3499:263:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3545:83:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "3547:77:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3547:79:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3547:79:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3520:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3529:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3516:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3516:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3541:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3512:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3512:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "3509:119:16"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3638:117:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3653:15:16",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3667:1:16",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3657:6:16",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3682:63:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3717:9:16"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3728:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3713:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3713:22:16"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3737:7:16"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3692:20:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3692:53:16"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3682:6:16"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3469:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3480:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3492:6:16",
                "type": ""
              }
            ],
            "src": "3433:329:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3810:47:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3820:31:16",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3842:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3845:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "signextend",
                      "nodeType": "YulIdentifier",
                      "src": "3831:10:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3831:20:16"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3820:7:16"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_int8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3792:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3802:7:16",
                "type": ""
              }
            ],
            "src": "3768:89:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3922:50:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3939:3:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3959:5:16"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_int8",
                          "nodeType": "YulIdentifier",
                          "src": "3944:14:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3944:21:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3932:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3932:34:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3932:34:16"
                }
              ]
            },
            "name": "abi_encode_t_int8_to_t_int8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3910:5:16",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3917:3:16",
                "type": ""
              }
            ],
            "src": "3863:109:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4070:118:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4080:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4092:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4103:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4088:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4088:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4080:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4154:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4167:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4178:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4163:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4163:17:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_int8_to_t_int8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4116:37:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4116:65:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4116:65:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_int8__to_t_int8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4042:9:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4054:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4065:4:16",
                "type": ""
              }
            ],
            "src": "3978:210:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4277:391:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4323:83:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "4325:77:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4325:79:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4325:79:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4298:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4307:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4294:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4294:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4319:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4290:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4290:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "4287:119:16"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4416:117:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4431:15:16",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4445:1:16",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4435:6:16",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4460:63:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4495:9:16"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4506:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4491:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4491:22:16"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4515:7:16"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4470:20:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4470:53:16"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4460:6:16"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4543:118:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4558:16:16",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4572:2:16",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4562:6:16",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4588:63:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4623:9:16"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4634:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4619:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4619:22:16"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4643:7:16"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4598:20:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4598:53:16"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "4588:6:16"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4239:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4250:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4262:6:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4270:6:16",
                "type": ""
              }
            ],
            "src": "4194:474:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4733:40:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4744:22:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4760:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4754:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4754:12:16"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "4744:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4716:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4726:6:16",
                "type": ""
              }
            ],
            "src": "4674:99:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4875:73:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4892:3:16"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4897:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4885:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4885:19:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4885:19:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4913:29:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4932:3:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4937:4:16",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4928:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4928:14:16"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "4913:11:16"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4847:3:16",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4852:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "4863:11:16",
                "type": ""
              }
            ],
            "src": "4779:169:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5003:258:16",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5013:10:16",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5022:1:16",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "5017:1:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5082:63:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "5107:3:16"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "5112:1:16"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5103:3:16"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5103:11:16"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "5126:3:16"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "5131:1:16"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5122:3:16"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5122:11:16"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "5116:5:16"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5116:18:16"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5096:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5096:39:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5096:39:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5043:1:16"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5046:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "5040:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5040:13:16"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "5054:19:16",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5056:15:16",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "5065:1:16"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5068:2:16",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5061:3:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5061:10:16"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "5056:1:16"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "5036:3:16",
                    "statements": []
                  },
                  "src": "5032:113:16"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5179:76:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "5229:3:16"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "5234:6:16"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5225:3:16"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5225:16:16"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5243:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5218:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5218:27:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5218:27:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5160:1:16"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5163:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5157:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5157:13:16"
                  },
                  "nodeType": "YulIf",
                  "src": "5154:101:16"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "4985:3:16",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "4990:3:16",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4995:6:16",
                "type": ""
              }
            ],
            "src": "4954:307:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5315:54:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5325:38:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5343:5:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5350:2:16",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5339:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5339:14:16"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5359:2:16",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "5355:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5355:7:16"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "5335:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5335:28:16"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "5325:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5298:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "5308:6:16",
                "type": ""
              }
            ],
            "src": "5267:102:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5467:272:16",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5477:53:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5524:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "5491:32:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5491:39:16"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5481:6:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5539:78:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5605:3:16"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5610:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5546:58:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5546:71:16"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5539:3:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5652:5:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5659:4:16",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5648:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5648:16:16"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5666:3:16"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5671:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "5626:21:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5626:52:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5626:52:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5687:46:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5698:3:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5725:6:16"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "5703:21:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5703:29:16"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5694:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5694:39:16"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5687:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5448:5:16",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5455:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5463:3:16",
                "type": ""
              }
            ],
            "src": "5375:364:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5863:195:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5873:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5885:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5896:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5881:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5881:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5873:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5920:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5931:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5916:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5916:17:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5939:4:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5945:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5935:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5935:20:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5909:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5909:47:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5909:47:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5965:86:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6037:6:16"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6046:4:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5973:63:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5973:78:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5965:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5835:9:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5847:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5858:4:16",
                "type": ""
              }
            ],
            "src": "5745:313:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6092:152:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6109:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6112:77:16",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6102:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6102:88:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6102:88:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6206:1:16",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6209:4:16",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6199:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6199:15:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6199:15:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6230:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6233:4:16",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6223:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6223:15:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6223:15:16"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "6064:180:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6298:300:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6308:25:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6331:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6313:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6313:20:16"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "6308:1:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6342:25:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6365:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6347:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6347:20:16"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "6342:1:16"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6540:22:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6542:16:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6542:18:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6542:18:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "6452:1:16"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "6445:6:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6445:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6438:6:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6438:17:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "6460:1:16"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6467:66:16",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "6535:1:16"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "6463:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6463:74:16"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "6457:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6457:81:16"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6434:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6434:105:16"
                  },
                  "nodeType": "YulIf",
                  "src": "6431:131:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6572:20:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6587:1:16"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6590:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "6583:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6583:9:16"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "6572:7:16"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6281:1:16",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6284:1:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "6290:7:16",
                "type": ""
              }
            ],
            "src": "6250:348:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6632:152:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6649:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6652:77:16",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6642:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6642:88:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6642:88:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6746:1:16",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6749:4:16",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6739:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6739:15:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6739:15:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6770:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6773:4:16",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6763:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6763:15:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6763:15:16"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "6604:180:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6832:143:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6842:25:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6865:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6847:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6847:20:16"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "6842:1:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6876:25:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6899:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6881:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6881:20:16"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "6876:1:16"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6923:22:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "6925:16:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6925:18:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6925:18:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6920:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6913:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6913:9:16"
                  },
                  "nodeType": "YulIf",
                  "src": "6910:35:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6955:14:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6964:1:16"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6967:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "6960:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6960:9:16"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "6955:1:16"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6821:1:16",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6824:1:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "6830:1:16",
                "type": ""
              }
            ],
            "src": "6790:185:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7025:261:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7035:25:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7058:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7040:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7040:20:16"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "7035:1:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7069:25:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7092:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7074:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7074:20:16"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "7069:1:16"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7232:22:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7234:16:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7234:18:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7234:18:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7153:1:16"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7160:66:16",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "7228:1:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7156:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7156:74:16"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7150:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7150:81:16"
                  },
                  "nodeType": "YulIf",
                  "src": "7147:107:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7264:16:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7275:1:16"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7278:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7271:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7271:9:16"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "7264:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7012:1:16",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7015:1:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "7021:3:16",
                "type": ""
              }
            ],
            "src": "6981:305:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7337:146:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7347:25:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7370:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7352:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7352:20:16"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "7347:1:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7381:25:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7404:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7386:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7386:20:16"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "7381:1:16"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7428:22:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7430:16:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7430:18:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7430:18:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7422:1:16"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7425:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "7419:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7419:8:16"
                  },
                  "nodeType": "YulIf",
                  "src": "7416:34:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7460:17:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7472:1:16"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7475:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "7468:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7468:9:16"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "7460:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7323:1:16",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7326:1:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "7332:4:16",
                "type": ""
              }
            ],
            "src": "7292:191:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7517:152:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7534:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7537:77:16",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7527:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7527:88:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7527:88:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7631:1:16",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7634:4:16",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7624:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7624:15:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7624:15:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7655:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7658:4:16",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7648:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7648:15:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7648:15:16"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "7489:180:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7726:269:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7736:22:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "7750:4:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7756:1:16",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "7746:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7746:12:16"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "7736:6:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7767:38:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "7797:4:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7803:1:16",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7793:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7793:12:16"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "7771:18:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7844:51:16",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "7858:27:16",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "7872:6:16"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7880:4:16",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "7868:3:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7868:17:16"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "7858:6:16"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "7824:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7817:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7817:26:16"
                  },
                  "nodeType": "YulIf",
                  "src": "7814:81:16"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7947:42:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "7961:16:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7961:18:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7961:18:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "7911:18:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "7934:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7942:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "7931:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7931:14:16"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "7908:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7908:38:16"
                  },
                  "nodeType": "YulIf",
                  "src": "7905:84:16"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "7710:4:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7719:6:16",
                "type": ""
              }
            ],
            "src": "7675:320:16"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_int8(value) -> cleaned {\n        cleaned := signextend(0, value)\n    }\n\n    function abi_encode_t_int8_to_t_int8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int8(value))\n    }\n\n    function abi_encode_tuple_t_int8__to_t_int8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int8_to_t_int8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n",
      "id": 16,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
  "sourceMap": "59:2686:11:-:0;;;433:6;404:35;;449:106;;;;;;;;;;473:14;;;;;;;;;;;;;;;;;:6;:14;;;;;;;;;;;;:::i;:::-;;521:11;;498:8;:20;507:10;498:20;;;;;;;;;;;;;;;:34;;;;59:2686;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:180:16:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;193:320;237:6;274:1;268:4;264:12;254:22;;321:1;315:4;311:12;342:18;332:81;;398:4;390:6;386:17;376:27;;332:81;460:2;452:6;449:14;429:18;426:38;423:84;;;479:18;;:::i;:::-;423:84;244:269;193:320;;;:::o;59:2686:11:-;;;;;;;",
  "deployedSourceMap": "59:2686:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;147:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2215:301;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;565:248;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;404:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1339:695;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;175:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;336:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;225:62;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2042:165;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;377:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;825:506;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2524:194;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;147:21;;;;;;;;;;;;:::o;2215:301::-;2318:12;2380:6;2348:7;:19;2356:10;2348:19;;;;;;;;;;;;;;;:29;2368:8;2348:29;;;;;;;;;;;;;;;:38;;;;2423:8;2402:38;;2411:10;2402:38;;;2433:6;2402:38;;;;;;:::i;:::-;;;;;;;;2504:4;2497:11;;2215:301;;;;:::o;565:248::-;596:12;642:6;;;;;;;;;;;628:20;;:10;:20;;;620:29;;;;;;660:18;696:3;693:2;681:11;;:14;;;;:::i;:::-;:18;;;;:::i;:::-;660:39;;732:11;;718:10;:25;;710:34;;;;;;780:1;769:10;:12;;;;:::i;:::-;755:11;;:26;;;;;;;:::i;:::-;;;;;;;;799:4;792:11;;;565:248;:::o;404:35::-;;;;:::o;1339:695::-;1464:12;1489:18;1510:7;:14;1518:5;1510:14;;;;;;;;;;;;;;;:26;1525:10;1510:26;;;;;;;;;;;;;;;;1489:47;;1574:6;1555:8;:15;1564:5;1555:15;;;;;;;;;;;;;;;;:25;;:49;;;;;1598:6;1584:10;:20;;1555:49;1547:58;;;;;;1616:23;1653:3;1651:1;1642:6;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1616:40;;1682:15;1667:11;;:30;;;;;;;:::i;:::-;;;;;;;;1726:15;1717:6;:24;;;;:::i;:::-;1708:33;;1769:6;1752:8;:13;1761:3;1752:13;;;;;;;;;;;;;;;;:23;;;;;;;:::i;:::-;;;;;;;;1805:6;1786:8;:15;1795:5;1786:15;;;;;;;;;;;;;;;;:25;;;;;;;:::i;:::-;;;;;;;;130:10;1826;:24;1822:93;;;1897:6;1867:7;:14;1875:5;1867:14;;;;;;;;;;;;;;;:26;1882:10;1867:26;;;;;;;;;;;;;;;;:36;;;;;;;:::i;:::-;;;;;;;;1822:93;1946:3;1930:28;;1939:5;1930:28;;;1951:6;1930:28;;;;;;:::i;:::-;;;;;;;;2022:4;2015:11;;;;1339:695;;;;;:::o;175:43::-;;;;;;;;;;;;;;;;;:::o;336:34::-;368:2;336:34;:::o;225:62::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2042:165::-;2143:15;2183:8;:16;2192:6;2183:16;;;;;;;;;;;;;;;;2176:23;;2042:165;;;:::o;377:20::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;825:506::-;924:12;986:6;962:8;:20;971:10;962:20;;;;;;;;;;;;;;;;:30;;954:39;;;;;;1028:6;1004:8;:20;1013:10;1004:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;1045:23;1082:3;1080:1;1071:6;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1045:40;;1111:15;1096:11;;:30;;;;;;;:::i;:::-;;;;;;;;1155:15;1146:6;:24;;;;:::i;:::-;1137:33;;1198:6;1181:8;:13;1190:3;1181:13;;;;;;;;;;;;;;;;:23;;;;;;;:::i;:::-;;;;;;;;1243:3;1222:33;;1231:10;1222:33;;;1248:6;1222:33;;;;;;:::i;:::-;;;;;;;;1319:4;1312:11;;;825:506;;;;:::o;2524:194::-;2643:17;2685:7;:15;2693:6;2685:15;;;;;;;;;;;;;;;:25;2701:8;2685:25;;;;;;;;;;;;;;;;2678:32;;2524:194;;;;:::o;7:126:16:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:77::-;1230:7;1259:5;1248:16;;1193:77;;;:::o;1276:122::-;1349:24;1367:5;1349:24;:::i;:::-;1342:5;1339:35;1329:63;;1388:1;1385;1378:12;1329:63;1276:122;:::o;1404:139::-;1450:5;1488:6;1475:20;1466:29;;1504:33;1531:5;1504:33;:::i;:::-;1404:139;;;;:::o;1549:474::-;1617:6;1625;1674:2;1662:9;1653:7;1649:23;1645:32;1642:119;;;1680:79;;:::i;:::-;1642:119;1800:1;1825:53;1870:7;1861:6;1850:9;1846:22;1825:53;:::i;:::-;1815:63;;1771:117;1927:2;1953:53;1998:7;1989:6;1978:9;1974:22;1953:53;:::i;:::-;1943:63;;1898:118;1549:474;;;;;:::o;2029:90::-;2063:7;2106:5;2099:13;2092:21;2081:32;;2029:90;;;:::o;2125:109::-;2206:21;2221:5;2206:21;:::i;:::-;2201:3;2194:34;2125:109;;:::o;2240:210::-;2327:4;2365:2;2354:9;2350:18;2342:26;;2378:65;2440:1;2429:9;2425:17;2416:6;2378:65;:::i;:::-;2240:210;;;;:::o;2456:118::-;2543:24;2561:5;2543:24;:::i;:::-;2538:3;2531:37;2456:118;;:::o;2580:222::-;2673:4;2711:2;2700:9;2696:18;2688:26;;2724:71;2792:1;2781:9;2777:17;2768:6;2724:71;:::i;:::-;2580:222;;;;:::o;2808:619::-;2885:6;2893;2901;2950:2;2938:9;2929:7;2925:23;2921:32;2918:119;;;2956:79;;:::i;:::-;2918:119;3076:1;3101:53;3146:7;3137:6;3126:9;3122:22;3101:53;:::i;:::-;3091:63;;3047:117;3203:2;3229:53;3274:7;3265:6;3254:9;3250:22;3229:53;:::i;:::-;3219:63;;3174:118;3331:2;3357:53;3402:7;3393:6;3382:9;3378:22;3357:53;:::i;:::-;3347:63;;3302:118;2808:619;;;;;:::o;3433:329::-;3492:6;3541:2;3529:9;3520:7;3516:23;3512:32;3509:119;;;3547:79;;:::i;:::-;3509:119;3667:1;3692:53;3737:7;3728:6;3717:9;3713:22;3692:53;:::i;:::-;3682:63;;3638:117;3433:329;;;;:::o;3768:89::-;3802:7;3845:5;3842:1;3831:20;3820:31;;3768:89;;;:::o;3863:109::-;3944:21;3959:5;3944:21;:::i;:::-;3939:3;3932:34;3863:109;;:::o;3978:210::-;4065:4;4103:2;4092:9;4088:18;4080:26;;4116:65;4178:1;4167:9;4163:17;4154:6;4116:65;:::i;:::-;3978:210;;;;:::o;4194:474::-;4262:6;4270;4319:2;4307:9;4298:7;4294:23;4290:32;4287:119;;;4325:79;;:::i;:::-;4287:119;4445:1;4470:53;4515:7;4506:6;4495:9;4491:22;4470:53;:::i;:::-;4460:63;;4416:117;4572:2;4598:53;4643:7;4634:6;4623:9;4619:22;4598:53;:::i;:::-;4588:63;;4543:118;4194:474;;;;;:::o;4674:99::-;4726:6;4760:5;4754:12;4744:22;;4674:99;;;:::o;4779:169::-;4863:11;4897:6;4892:3;4885:19;4937:4;4932:3;4928:14;4913:29;;4779:169;;;;:::o;4954:307::-;5022:1;5032:113;5046:6;5043:1;5040:13;5032:113;;;5131:1;5126:3;5122:11;5116:18;5112:1;5107:3;5103:11;5096:39;5068:2;5065:1;5061:10;5056:15;;5032:113;;;5163:6;5160:1;5157:13;5154:101;;;5243:1;5234:6;5229:3;5225:16;5218:27;5154:101;5003:258;4954:307;;;:::o;5267:102::-;5308:6;5359:2;5355:7;5350:2;5343:5;5339:14;5335:28;5325:38;;5267:102;;;:::o;5375:364::-;5463:3;5491:39;5524:5;5491:39;:::i;:::-;5546:71;5610:6;5605:3;5546:71;:::i;:::-;5539:78;;5626:52;5671:6;5666:3;5659:4;5652:5;5648:16;5626:52;:::i;:::-;5703:29;5725:6;5703:29;:::i;:::-;5698:3;5694:39;5687:46;;5467:272;5375:364;;;;:::o;5745:313::-;5858:4;5896:2;5885:9;5881:18;5873:26;;5945:9;5939:4;5935:20;5931:1;5920:9;5916:17;5909:47;5973:78;6046:4;6037:6;5973:78;:::i;:::-;5965:86;;5745:313;;;;:::o;6064:180::-;6112:77;6109:1;6102:88;6209:4;6206:1;6199:15;6233:4;6230:1;6223:15;6250:348;6290:7;6313:20;6331:1;6313:20;:::i;:::-;6308:25;;6347:20;6365:1;6347:20;:::i;:::-;6342:25;;6535:1;6467:66;6463:74;6460:1;6457:81;6452:1;6445:9;6438:17;6434:105;6431:131;;;6542:18;;:::i;:::-;6431:131;6590:1;6587;6583:9;6572:20;;6250:348;;;;:::o;6604:180::-;6652:77;6649:1;6642:88;6749:4;6746:1;6739:15;6773:4;6770:1;6763:15;6790:185;6830:1;6847:20;6865:1;6847:20;:::i;:::-;6842:25;;6881:20;6899:1;6881:20;:::i;:::-;6876:25;;6920:1;6910:35;;6925:18;;:::i;:::-;6910:35;6967:1;6964;6960:9;6955:14;;6790:185;;;;:::o;6981:305::-;7021:3;7040:20;7058:1;7040:20;:::i;:::-;7035:25;;7074:20;7092:1;7074:20;:::i;:::-;7069:25;;7228:1;7160:66;7156:74;7153:1;7150:81;7147:107;;;7234:18;;:::i;:::-;7147:107;7278:1;7275;7271:9;7264:16;;6981:305;;;;:::o;7292:191::-;7332:4;7352:20;7370:1;7352:20;:::i;:::-;7347:25;;7386:20;7404:1;7386:20;:::i;:::-;7381:25;;7425:1;7422;7419:8;7416:34;;;7430:18;;:::i;:::-;7416:34;7475:1;7472;7468:9;7460:17;;7292:191;;;;:::o;7489:180::-;7537:77;7534:1;7527:88;7634:4;7631:1;7624:15;7658:4;7655:1;7648:15;7675:320;7719:6;7756:1;7750:4;7746:12;7736:22;;7803:1;7797:4;7793:12;7824:18;7814:81;;7880:4;7872:6;7868:17;7858:27;;7814:81;7942:2;7934:6;7931:14;7911:18;7908:38;7905:84;;;7961:18;;:::i;:::-;7905:84;7726:269;7675:320;;;:::o",
  "source": "pragma solidity >= 0.7.0 < 0.9.0;\r\nimport \"./IERC20.sol\";\r\ncontract Apsota is IERC20{\r\n    uint256 private constant MAX_UINT256 = 2**256 - 1;\r\n    address public minter;\r\n    mapping(address => uint256) public balances;\r\n    mapping(address => mapping(address => uint256)) public allowed;\r\n    string  constant name  = \"AutoCoin\";\r\n    int8 public constant decimals = 10;\r\n    string public symbol;\r\n    uint256 public totalSupply = 10**18 ;\r\n\r\n    constructor(){\r\n        symbol = \"ATC\";\r\n        balances[msg.sender] = totalSupply;\r\n       \r\n    \r\n    }\r\n\r\n\r\n    function mint() public returns(bool success){\r\n        require(msg.sender == minter);\r\n        uint256 percentage = totalSupply*20/100;\r\n        require(percentage <= totalSupply);\r\n        totalSupply+= percentage*8;\r\n        return true;\r\n\r\n    }\r\n    \r\n    function transfer(address _to, uint256 _value)\r\n        public\r\n        override\r\n        returns (bool success)\r\n    {\r\n        require(balances[msg.sender] >= _value);\r\n        balances[msg.sender] -= _value;\r\n        uint256 burn_percentage = _value * 3/100;\r\n        totalSupply -= burn_percentage;\r\n        _value = _value - burn_percentage;\r\n        balances[_to] += _value  ;\r\n        emit Transfer(msg.sender, _to, _value); //solhint-disable-line indent, no-unused-vars\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(\r\n        address _from,\r\n        address _to,\r\n        uint256 _value\r\n    ) public override returns (bool success) {\r\n        uint256 allowance_ = allowed[_from][msg.sender];\r\n        require(balances[_from] >= _value && allowance_ >= _value);\r\n        uint256 burn_percentage = _value * 3/100;\r\n        totalSupply -= burn_percentage;\r\n        _value = _value - burn_percentage;\r\n        balances[_to] += _value;\r\n        balances[_from] -= _value;\r\n        if (allowance_ < MAX_UINT256) {\r\n            allowed[_from][msg.sender] -= _value;\r\n        }\r\n        emit Transfer(_from, _to, _value); //solhint-disable-line indent, no-unused-vars\r\n        return true;\r\n    }\r\n\r\n    function balanceOf(address _owner)\r\n        public\r\n        view\r\n        override\r\n        returns (uint256 balance)\r\n    {\r\n        return balances[_owner];\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value)\r\n        public\r\n        override\r\n        returns (bool success)\r\n    {\r\n        allowed[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value); //solhint-disable-line indent, no-unused-vars\r\n        return true;\r\n    }\r\n\r\n    function allowance(address _owner, address _spender)\r\n        public\r\n        view\r\n        override\r\n        returns (uint256 remaining)\r\n    {\r\n        return allowed[_owner][_spender];\r\n    }\r\n    \r\n    \r\n    \r\n    \r\n}",
  "sourcePath": "C:\\Users\\natha\\Documents\\meusProjetos\\AutorHash\\blockchain\\contracts\\Apsota.sol",
=======
  "sourceMap": "59:2713:15:-:0;;;433:6;404:35;;491:91;;;;;;;;;;524:10;515:6;;:19;;;;;;;;;;;;;;;;;;545:14;;;;;;;;;;;;;;;;;:6;:14;;;;;;;;;;;;:::i;:::-;;59:2713;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:180:16:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;193:320;237:6;274:1;268:4;264:12;254:22;;321:1;315:4;311:12;342:18;332:81;;398:4;390:6;386:17;376:27;;332:81;460:2;452:6;449:14;429:18;426:38;423:84;;;479:18;;:::i;:::-;423:84;244:269;193:320;;;:::o;59:2713:15:-;;;;;;;",
  "deployedSourceMap": "59:2713:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;146:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2242:301;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;592:248;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;404:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1366:695;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;174:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;336:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;224:62;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2069:165;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;377:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;852:506;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2551:194;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;146:21;;;;;;;;;;;;:::o;2242:301::-;2345:12;2407:6;2375:7;:19;2383:10;2375:19;;;;;;;;;;;;;;;:29;2395:8;2375:29;;;;;;;;;;;;;;;:38;;;;2450:8;2429:38;;2438:10;2429:38;;;2460:6;2429:38;;;;;;:::i;:::-;;;;;;;;2531:4;2524:11;;2242:301;;;;:::o;592:248::-;623:12;669:6;;;;;;;;;;;655:20;;:10;:20;;;647:29;;;;;;687:18;723:3;720:2;708:11;;:14;;;;:::i;:::-;:18;;;;:::i;:::-;687:39;;759:11;;745:10;:25;;737:34;;;;;;807:1;796:10;:12;;;;:::i;:::-;782:11;;:26;;;;;;;:::i;:::-;;;;;;;;826:4;819:11;;;592:248;:::o;404:35::-;;;;:::o;1366:695::-;1491:12;1516:18;1537:7;:14;1545:5;1537:14;;;;;;;;;;;;;;;:26;1552:10;1537:26;;;;;;;;;;;;;;;;1516:47;;1601:6;1582:8;:15;1591:5;1582:15;;;;;;;;;;;;;;;;:25;;:49;;;;;1625:6;1611:10;:20;;1582:49;1574:58;;;;;;1643:23;1680:3;1678:1;1669:6;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1643:40;;1709:15;1694:11;;:30;;;;;;;:::i;:::-;;;;;;;;1753:15;1744:6;:24;;;;:::i;:::-;1735:33;;1796:6;1779:8;:13;1788:3;1779:13;;;;;;;;;;;;;;;;:23;;;;;;;:::i;:::-;;;;;;;;1832:6;1813:8;:15;1822:5;1813:15;;;;;;;;;;;;;;;;:25;;;;;;;:::i;:::-;;;;;;;;129:10;1853;:24;1849:93;;;1924:6;1894:7;:14;1902:5;1894:14;;;;;;;;;;;;;;;:26;1909:10;1894:26;;;;;;;;;;;;;;;;:36;;;;;;;:::i;:::-;;;;;;;;1849:93;1973:3;1957:28;;1966:5;1957:28;;;1978:6;1957:28;;;;;;:::i;:::-;;;;;;;;2049:4;2042:11;;;;1366:695;;;;;:::o;174:43::-;;;;;;;;;;;;;;;;;:::o;336:34::-;368:2;336:34;:::o;224:62::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2069:165::-;2170:15;2210:8;:16;2219:6;2210:16;;;;;;;;;;;;;;;;2203:23;;2069:165;;;:::o;377:20::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;852:506::-;951:12;1013:6;989:8;:20;998:10;989:20;;;;;;;;;;;;;;;;:30;;981:39;;;;;;1055:6;1031:8;:20;1040:10;1031:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;1072:23;1109:3;1107:1;1098:6;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1072:40;;1138:15;1123:11;;:30;;;;;;;:::i;:::-;;;;;;;;1182:15;1173:6;:24;;;;:::i;:::-;1164:33;;1225:6;1208:8;:13;1217:3;1208:13;;;;;;;;;;;;;;;;:23;;;;;;;:::i;:::-;;;;;;;;1270:3;1249:33;;1258:10;1249:33;;;1275:6;1249:33;;;;;;:::i;:::-;;;;;;;;1346:4;1339:11;;;852:506;;;;:::o;2551:194::-;2670:17;2712:7;:15;2720:6;2712:15;;;;;;;;;;;;;;;:25;2728:8;2712:25;;;;;;;;;;;;;;;;2705:32;;2551:194;;;;:::o;7:126:16:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:77::-;1230:7;1259:5;1248:16;;1193:77;;;:::o;1276:122::-;1349:24;1367:5;1349:24;:::i;:::-;1342:5;1339:35;1329:63;;1388:1;1385;1378:12;1329:63;1276:122;:::o;1404:139::-;1450:5;1488:6;1475:20;1466:29;;1504:33;1531:5;1504:33;:::i;:::-;1404:139;;;;:::o;1549:474::-;1617:6;1625;1674:2;1662:9;1653:7;1649:23;1645:32;1642:119;;;1680:79;;:::i;:::-;1642:119;1800:1;1825:53;1870:7;1861:6;1850:9;1846:22;1825:53;:::i;:::-;1815:63;;1771:117;1927:2;1953:53;1998:7;1989:6;1978:9;1974:22;1953:53;:::i;:::-;1943:63;;1898:118;1549:474;;;;;:::o;2029:90::-;2063:7;2106:5;2099:13;2092:21;2081:32;;2029:90;;;:::o;2125:109::-;2206:21;2221:5;2206:21;:::i;:::-;2201:3;2194:34;2125:109;;:::o;2240:210::-;2327:4;2365:2;2354:9;2350:18;2342:26;;2378:65;2440:1;2429:9;2425:17;2416:6;2378:65;:::i;:::-;2240:210;;;;:::o;2456:118::-;2543:24;2561:5;2543:24;:::i;:::-;2538:3;2531:37;2456:118;;:::o;2580:222::-;2673:4;2711:2;2700:9;2696:18;2688:26;;2724:71;2792:1;2781:9;2777:17;2768:6;2724:71;:::i;:::-;2580:222;;;;:::o;2808:619::-;2885:6;2893;2901;2950:2;2938:9;2929:7;2925:23;2921:32;2918:119;;;2956:79;;:::i;:::-;2918:119;3076:1;3101:53;3146:7;3137:6;3126:9;3122:22;3101:53;:::i;:::-;3091:63;;3047:117;3203:2;3229:53;3274:7;3265:6;3254:9;3250:22;3229:53;:::i;:::-;3219:63;;3174:118;3331:2;3357:53;3402:7;3393:6;3382:9;3378:22;3357:53;:::i;:::-;3347:63;;3302:118;2808:619;;;;;:::o;3433:329::-;3492:6;3541:2;3529:9;3520:7;3516:23;3512:32;3509:119;;;3547:79;;:::i;:::-;3509:119;3667:1;3692:53;3737:7;3728:6;3717:9;3713:22;3692:53;:::i;:::-;3682:63;;3638:117;3433:329;;;;:::o;3768:89::-;3802:7;3845:5;3842:1;3831:20;3820:31;;3768:89;;;:::o;3863:109::-;3944:21;3959:5;3944:21;:::i;:::-;3939:3;3932:34;3863:109;;:::o;3978:210::-;4065:4;4103:2;4092:9;4088:18;4080:26;;4116:65;4178:1;4167:9;4163:17;4154:6;4116:65;:::i;:::-;3978:210;;;;:::o;4194:474::-;4262:6;4270;4319:2;4307:9;4298:7;4294:23;4290:32;4287:119;;;4325:79;;:::i;:::-;4287:119;4445:1;4470:53;4515:7;4506:6;4495:9;4491:22;4470:53;:::i;:::-;4460:63;;4416:117;4572:2;4598:53;4643:7;4634:6;4623:9;4619:22;4598:53;:::i;:::-;4588:63;;4543:118;4194:474;;;;;:::o;4674:99::-;4726:6;4760:5;4754:12;4744:22;;4674:99;;;:::o;4779:169::-;4863:11;4897:6;4892:3;4885:19;4937:4;4932:3;4928:14;4913:29;;4779:169;;;;:::o;4954:307::-;5022:1;5032:113;5046:6;5043:1;5040:13;5032:113;;;5131:1;5126:3;5122:11;5116:18;5112:1;5107:3;5103:11;5096:39;5068:2;5065:1;5061:10;5056:15;;5032:113;;;5163:6;5160:1;5157:13;5154:101;;;5243:1;5234:6;5229:3;5225:16;5218:27;5154:101;5003:258;4954:307;;;:::o;5267:102::-;5308:6;5359:2;5355:7;5350:2;5343:5;5339:14;5335:28;5325:38;;5267:102;;;:::o;5375:364::-;5463:3;5491:39;5524:5;5491:39;:::i;:::-;5546:71;5610:6;5605:3;5546:71;:::i;:::-;5539:78;;5626:52;5671:6;5666:3;5659:4;5652:5;5648:16;5626:52;:::i;:::-;5703:29;5725:6;5703:29;:::i;:::-;5698:3;5694:39;5687:46;;5467:272;5375:364;;;;:::o;5745:313::-;5858:4;5896:2;5885:9;5881:18;5873:26;;5945:9;5939:4;5935:20;5931:1;5920:9;5916:17;5909:47;5973:78;6046:4;6037:6;5973:78;:::i;:::-;5965:86;;5745:313;;;;:::o;6064:180::-;6112:77;6109:1;6102:88;6209:4;6206:1;6199:15;6233:4;6230:1;6223:15;6250:348;6290:7;6313:20;6331:1;6313:20;:::i;:::-;6308:25;;6347:20;6365:1;6347:20;:::i;:::-;6342:25;;6535:1;6467:66;6463:74;6460:1;6457:81;6452:1;6445:9;6438:17;6434:105;6431:131;;;6542:18;;:::i;:::-;6431:131;6590:1;6587;6583:9;6572:20;;6250:348;;;;:::o;6604:180::-;6652:77;6649:1;6642:88;6749:4;6746:1;6739:15;6773:4;6770:1;6763:15;6790:185;6830:1;6847:20;6865:1;6847:20;:::i;:::-;6842:25;;6881:20;6899:1;6881:20;:::i;:::-;6876:25;;6920:1;6910:35;;6925:18;;:::i;:::-;6910:35;6967:1;6964;6960:9;6955:14;;6790:185;;;;:::o;6981:305::-;7021:3;7040:20;7058:1;7040:20;:::i;:::-;7035:25;;7074:20;7092:1;7074:20;:::i;:::-;7069:25;;7228:1;7160:66;7156:74;7153:1;7150:81;7147:107;;;7234:18;;:::i;:::-;7147:107;7278:1;7275;7271:9;7264:16;;6981:305;;;;:::o;7292:191::-;7332:4;7352:20;7370:1;7352:20;:::i;:::-;7347:25;;7386:20;7404:1;7386:20;:::i;:::-;7381:25;;7425:1;7422;7419:8;7416:34;;;7430:18;;:::i;:::-;7416:34;7475:1;7472;7468:9;7460:17;;7292:191;;;;:::o;7489:180::-;7537:77;7534:1;7527:88;7634:4;7631:1;7624:15;7658:4;7655:1;7648:15;7675:320;7719:6;7756:1;7750:4;7746:12;7736:22;;7803:1;7797:4;7793:12;7824:18;7814:81;;7880:4;7872:6;7868:17;7858:27;;7814:81;7942:2;7934:6;7931:14;7911:18;7908:38;7905:84;;;7961:18;;:::i;:::-;7905:84;7726:269;7675:320;;;:::o",
  "source": "pragma solidity >= 0.7.0 < 0.9.0;\r\nimport \"./IERC20.sol\";\r\ncontract Token is IERC20{\r\n    uint256 private constant MAX_UINT256 = 2**256 - 1;\r\n    address public minter;\r\n    mapping(address => uint256) public balances;\r\n    mapping(address => mapping(address => uint256)) public allowed;\r\n    string  constant name  = \"AutorCoin\";\r\n    int8 public constant decimals = 10;\r\n    string public symbol;\r\n    uint256 public totalSupply = 10**18 ;\r\n    uint256 private timeSinceLastReward;\r\n\r\n    constructor(){\r\n        minter = msg.sender;\r\n        symbol = \"Aut\";\r\n       \r\n    \r\n    }\r\n\r\n\r\n    function mint() public returns(bool success){\r\n        require(msg.sender == minter);\r\n        uint256 percentage = totalSupply*20/100;\r\n        require(percentage <= totalSupply);\r\n        totalSupply+= percentage*8;\r\n        return true;\r\n\r\n    }\r\n    \r\n    function transfer(address _to, uint256 _value)\r\n        public\r\n        override\r\n        returns (bool success)\r\n    {\r\n        require(balances[msg.sender] >= _value);\r\n        balances[msg.sender] -= _value;\r\n        uint256 burn_percentage = _value * 3/100;\r\n        totalSupply -= burn_percentage;\r\n        _value = _value - burn_percentage;\r\n        balances[_to] += _value  ;\r\n        emit Transfer(msg.sender, _to, _value); //solhint-disable-line indent, no-unused-vars\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(\r\n        address _from,\r\n        address _to,\r\n        uint256 _value\r\n    ) public override returns (bool success) {\r\n        uint256 allowance_ = allowed[_from][msg.sender];\r\n        require(balances[_from] >= _value && allowance_ >= _value);\r\n        uint256 burn_percentage = _value * 3/100;\r\n        totalSupply -= burn_percentage;\r\n        _value = _value - burn_percentage;\r\n        balances[_to] += _value;\r\n        balances[_from] -= _value;\r\n        if (allowance_ < MAX_UINT256) {\r\n            allowed[_from][msg.sender] -= _value;\r\n        }\r\n        emit Transfer(_from, _to, _value); //solhint-disable-line indent, no-unused-vars\r\n        return true;\r\n    }\r\n\r\n    function balanceOf(address _owner)\r\n        public\r\n        view\r\n        override\r\n        returns (uint256 balance)\r\n    {\r\n        return balances[_owner];\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value)\r\n        public\r\n        override\r\n        returns (bool success)\r\n    {\r\n        allowed[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value); //solhint-disable-line indent, no-unused-vars\r\n        return true;\r\n    }\r\n\r\n    function allowance(address _owner, address _spender)\r\n        public\r\n        view\r\n        override\r\n        returns (uint256 remaining)\r\n    {\r\n        return allowed[_owner][_spender];\r\n    }\r\n    \r\n    \r\n    \r\n    \r\n}",
  "sourcePath": "C:\\Users\\leova\\source\\repos\\AutorHash\\blockchain\\contracts\\Token.sol",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
  "ast": {
    "absolutePath": "project:/contracts/Token.sol",
    "exportedSymbols": {
      "IERC20": [
        1867
      ],
      "Token": [
        2335
      ]
    },
    "id": 2336,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2044,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:33:15"
      },
      {
        "absolutePath": "project:/contracts/IERC20.sol",
        "file": "./IERC20.sol",
        "id": 2045,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2336,
        "sourceUnit": 1868,
        "src": "35:22:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2046,
              "name": "IERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1867,
              "src": "77:6:15"
            },
            "id": 2047,
            "nodeType": "InheritanceSpecifier",
            "src": "77:6:15"
          }
        ],
        "canonicalName": "Token",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2335,
        "linearizedBaseContracts": [
          2335,
          1867
        ],
        "name": "Token",
        "nameLocation": "68:5:15",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 2054,
            "mutability": "constant",
            "name": "MAX_UINT256",
            "nameLocation": "115:11:15",
            "nodeType": "VariableDeclaration",
            "scope": 2335,
            "src": "90:49:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2048,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "90:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                "typeString": "int_const 1157...(70 digits omitted)...9935"
              },
              "id": 2053,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                  "typeString": "int_const 1157...(70 digits omitted)...9936"
                },
                "id": 2051,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "32",
                  "id": 2049,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "129:1:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_2_by_1",
                    "typeString": "int_const 2"
                  },
                  "value": "2"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "hexValue": "323536",
                  "id": 2050,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "132:3:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_256_by_1",
                    "typeString": "int_const 256"
                  },
                  "value": "256"
                },
                "src": "129:6:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                  "typeString": "int_const 1157...(70 digits omitted)...9936"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "-",
              "rightExpression": {
                "hexValue": "31",
                "id": 2052,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "138:1:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1_by_1",
                  "typeString": "int_const 1"
                },
                "value": "1"
              },
              "src": "129:10:15",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                "typeString": "int_const 1157...(70 digits omitted)...9935"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "07546172",
            "id": 2056,
            "mutability": "mutable",
            "name": "minter",
            "nameLocation": "161:6:15",
            "nodeType": "VariableDeclaration",
            "scope": 2335,
            "src": "146:21:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2055,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "146:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "27e235e3",
            "id": 2060,
            "mutability": "mutable",
            "name": "balances",
            "nameLocation": "209:8:15",
            "nodeType": "VariableDeclaration",
            "scope": 2335,
            "src": "174:43:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 2059,
              "keyType": {
                "id": 2057,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "182:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "174:27:15",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 2058,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "193:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5c658165",
            "id": 2066,
            "mutability": "mutable",
            "name": "allowed",
            "nameLocation": "279:7:15",
            "nodeType": "VariableDeclaration",
            "scope": 2335,
            "src": "224:62:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 2065,
              "keyType": {
                "id": 2061,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "232:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "224:47:15",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 2064,
                "keyType": {
                  "id": 2062,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "251:7:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "243:27:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 2063,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "262:7:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 2069,
            "mutability": "constant",
            "name": "name",
            "nameLocation": "310:4:15",
            "nodeType": "VariableDeclaration",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
            "scope": 2029,
            "src": "294:35:11",
=======
            "scope": 2335,
            "src": "293:36:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 2067,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "293:6:15",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "hexValue": "4175746f436f696e",
              "id": 1762,
=======
              "hexValue": "4175746f72436f696e",
              "id": 2068,
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "319:10:11",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_b981feb3c569ba5849ce6e2d832fe62f5983d9c6219262e900ed250434da6779",
                "typeString": "literal_string \"AutoCoin\""
              },
              "value": "AutoCoin"
=======
              "src": "318:11:15",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_35acddecbe41e1f9e5003f0f7b6add7551df5b9720dcf9067695592b95cb3ce3",
                "typeString": "literal_string \"AutorCoin\""
              },
              "value": "AutorCoin"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "functionSelector": "313ce567",
            "id": 2072,
            "mutability": "constant",
            "name": "decimals",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
            "nameLocation": "357:8:11",
            "nodeType": "VariableDeclaration",
            "scope": 2029,
            "src": "336:34:11",
=======
            "nameLocation": "357:8:15",
            "nodeType": "VariableDeclaration",
            "scope": 2335,
            "src": "336:34:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int8",
              "typeString": "int8"
            },
            "typeName": {
              "id": 2070,
              "name": "int8",
              "nodeType": "ElementaryTypeName",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "336:4:11",
=======
              "src": "336:4:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
              "typeDescriptions": {
                "typeIdentifier": "t_int8",
                "typeString": "int8"
              }
            },
            "value": {
              "hexValue": "3130",
              "id": 2071,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "368:2:11",
=======
              "src": "368:2:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "95d89b41",
            "id": 2074,
            "mutability": "mutable",
            "name": "symbol",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
            "nameLocation": "391:6:11",
            "nodeType": "VariableDeclaration",
            "scope": 2029,
            "src": "377:20:11",
=======
            "nameLocation": "391:6:15",
            "nodeType": "VariableDeclaration",
            "scope": 2335,
            "src": "377:20:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2073,
              "name": "string",
              "nodeType": "ElementaryTypeName",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "377:6:11",
=======
              "src": "377:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "18160ddd",
            "id": 2079,
            "mutability": "mutable",
            "name": "totalSupply",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
            "nameLocation": "419:11:11",
            "nodeType": "VariableDeclaration",
            "scope": 2029,
            "src": "404:35:11",
=======
            "nameLocation": "419:11:15",
            "nodeType": "VariableDeclaration",
            "scope": 2335,
            "src": "404:35:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2075,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "404:7:11",
=======
              "src": "404:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "id": 2078,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3130",
                "id": 2076,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                "src": "433:2:11",
=======
                "src": "433:2:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "hexValue": "3138",
                "id": 2077,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                "src": "437:2:11",
=======
                "src": "437:2:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_18_by_1",
                  "typeString": "int_const 18"
                },
                "value": "18"
              },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "433:6:11",
=======
              "src": "433:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              }
            },
            "visibility": "public"
          },
          {
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
=======
            "constant": false,
            "id": 2081,
            "mutability": "mutable",
            "name": "timeSinceLastReward",
            "nameLocation": "463:19:15",
            "nodeType": "VariableDeclaration",
            "scope": 2335,
            "src": "447:35:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2080,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "447:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            "body": {
              "id": 2093,
              "nodeType": "Block",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "462:93:11",
              "statements": [
                {
                  "expression": {
                    "id": 1778,
=======
              "src": "504:78:15",
              "statements": [
                {
                  "expression": {
                    "id": 2087,
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "id": 1776,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1768,
                      "src": "473:6:11",
=======
                      "id": 2084,
                      "name": "minter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2056,
                      "src": "515:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "hexValue": "415443",
                      "id": 1777,
=======
                      "expression": {
                        "id": 2085,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "524:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2086,
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "nodeType": "Literal",
                      "src": "482:5:11",
=======
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "524:10:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_d8c2c2ecaf186c5f218d30e392a4cc080daeaf4b15f1f69eeec142250a711720",
                        "typeString": "literal_string \"ATC\""
                      },
                      "value": "ATC"
                    },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "473:14:11",
=======
                    "src": "515:19:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "id": 1779,
                  "nodeType": "ExpressionStatement",
                  "src": "473:14:11"
=======
                  "id": 2088,
                  "nodeType": "ExpressionStatement",
                  "src": "515:19:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                },
                {
                  "expression": {
                    "id": 2091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "baseExpression": {
                        "id": 1780,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1754,
                        "src": "498:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1783,
                      "indexExpression": {
                        "expression": {
                          "id": 1781,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "507:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "507:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "498:20:11",
=======
                      "id": 2089,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2074,
                      "src": "545:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "id": 1784,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1773,
                      "src": "521:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "498:34:11",
=======
                      "hexValue": "417574",
                      "id": 2090,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "554:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_437c306b8a9c6a8452fc15ed391008fda9e1e7cfe978118f554d4f1201160a58",
                        "typeString": "literal_string \"Aut\""
                      },
                      "value": "Aut"
                    },
                    "src": "545:14:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2092,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "498:34:11"
=======
                  "src": "545:14:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                }
              ]
            },
            "id": 2094,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "id": 1774,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "460:2:11"
            },
            "returnParameters": {
              "id": 1775,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "462:0:11"
            },
            "scope": 2029,
            "src": "449:106:11",
=======
              "id": 2082,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "502:2:15"
            },
            "returnParameters": {
              "id": 2083,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "504:0:15"
            },
            "scope": 2335,
            "src": "491:91:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2128,
              "nodeType": "Block",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "609:204:11",
=======
              "src": "636:204:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2100,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                            "src": "628:3:11",
=======
                            "src": "655:3:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                          "src": "628:10:11",
=======
                          "src": "655:10:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2102,
                          "name": "minter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                          "referencedDeclaration": 1750,
                          "src": "642:6:11",
=======
                          "referencedDeclaration": 2056,
                          "src": "669:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "src": "628:20:11",
=======
                        "src": "655:20:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2099,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "src": "620:7:11",
=======
                      "src": "647:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "620:29:11",
=======
                    "src": "647:29:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2105,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "620:29:11"
=======
                  "src": "647:29:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                },
                {
                  "assignments": [
                    2107
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2107,
                      "mutability": "mutable",
                      "name": "percentage",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "nameLocation": "668:10:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1822,
                      "src": "660:18:11",
=======
                      "nameLocation": "695:10:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 2128,
                      "src": "687:18:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2106,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "src": "660:7:11",
=======
                        "src": "687:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2113,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2108,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1773,
                        "src": "681:11:11",
=======
                        "referencedDeclaration": 2079,
                        "src": "708:11:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "3230",
                        "id": 2109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "src": "693:2:11",
=======
                        "src": "720:2:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20_by_1",
                          "typeString": "int_const 20"
                        },
                        "value": "20"
                      },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "src": "681:14:11",
=======
                      "src": "708:14:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 2111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "src": "696:3:11",
=======
                      "src": "723:3:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "681:18:11",
=======
                    "src": "708:18:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "660:39:11"
=======
                  "src": "687:39:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2115,
                          "name": "percentage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                          "referencedDeclaration": 1801,
                          "src": "718:10:11",
=======
                          "referencedDeclaration": 2107,
                          "src": "745:10:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 2116,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                          "referencedDeclaration": 1773,
                          "src": "732:11:11",
=======
                          "referencedDeclaration": 2079,
                          "src": "759:11:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "src": "718:25:11",
=======
                        "src": "745:25:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2114,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "src": "710:7:11",
=======
                      "src": "737:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "710:34:11",
=======
                    "src": "737:34:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2119,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "710:34:11"
=======
                  "src": "737:34:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                },
                {
                  "expression": {
                    "id": 2124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2120,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "referencedDeclaration": 1773,
                      "src": "755:11:11",
=======
                      "referencedDeclaration": 2079,
                      "src": "782:11:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2121,
                        "name": "percentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1801,
                        "src": "769:10:11",
=======
                        "referencedDeclaration": 2107,
                        "src": "796:10:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "38",
                        "id": 2122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "src": "780:1:11",
=======
                        "src": "807:1:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_8_by_1",
                          "typeString": "int_const 8"
                        },
                        "value": "8"
                      },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "src": "769:12:11",
=======
                      "src": "796:12:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "755:26:11",
=======
                    "src": "782:26:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2125,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "755:26:11"
=======
                  "src": "782:26:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "799:4:11",
=======
                    "src": "826:4:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2098,
                  "id": 2127,
                  "nodeType": "Return",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "792:11:11"
=======
                  "src": "819:11:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                }
              ]
            },
            "functionSelector": "1249c58b",
            "id": 2129,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
            "nameLocation": "574:4:11",
=======
            "nameLocation": "601:4:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2095,
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "578:2:11"
=======
              "src": "605:2:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            },
            "returnParameters": {
              "id": 2098,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2097,
                  "mutability": "mutable",
                  "name": "success",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "nameLocation": "601:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1823,
                  "src": "596:12:11",
=======
                  "nameLocation": "628:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2129,
                  "src": "623:12:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2096,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "596:4:11",
=======
                    "src": "623:4:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "595:14:11"
            },
            "scope": 2029,
            "src": "565:248:11",
=======
              "src": "622:14:15"
            },
            "scope": 2335,
            "src": "592:248:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1818
            ],
            "body": {
              "id": 2188,
              "nodeType": "Block",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "943:388:11",
=======
              "src": "970:388:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2140,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                            "referencedDeclaration": 1754,
                            "src": "962:8:11",
=======
                            "referencedDeclaration": 2060,
                            "src": "989:8:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2143,
                          "indexExpression": {
                            "expression": {
                              "id": 2141,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                              "src": "971:3:11",
=======
                              "src": "998:3:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                            "src": "971:10:11",
=======
                            "src": "998:10:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                          "src": "962:20:11",
=======
                          "src": "989:20:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2144,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                          "referencedDeclaration": 1827,
                          "src": "986:6:11",
=======
                          "referencedDeclaration": 2133,
                          "src": "1013:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "src": "962:30:11",
=======
                        "src": "989:30:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2139,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "src": "954:7:11",
=======
                      "src": "981:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "954:39:11",
=======
                    "src": "981:39:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2147,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "954:39:11"
=======
                  "src": "981:39:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                },
                {
                  "expression": {
                    "id": 2153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2148,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1754,
                        "src": "1004:8:11",
=======
                        "referencedDeclaration": 2060,
                        "src": "1031:8:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2151,
                      "indexExpression": {
                        "expression": {
                          "id": 2149,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                          "src": "1013:3:11",
=======
                          "src": "1040:3:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "src": "1013:10:11",
=======
                        "src": "1040:10:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "src": "1004:20:11",
=======
                      "src": "1031:20:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 2152,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "referencedDeclaration": 1827,
                      "src": "1028:6:11",
=======
                      "referencedDeclaration": 2133,
                      "src": "1055:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "1004:30:11",
=======
                    "src": "1031:30:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2154,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "1004:30:11"
=======
                  "src": "1031:30:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                },
                {
                  "assignments": [
                    2156
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2156,
                      "mutability": "mutable",
                      "name": "burn_percentage",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "nameLocation": "1053:15:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1882,
                      "src": "1045:23:11",
=======
                      "nameLocation": "1080:15:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 2188,
                      "src": "1072:23:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2155,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "src": "1045:7:11",
=======
                        "src": "1072:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2162,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2157,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1827,
                        "src": "1071:6:11",
=======
                        "referencedDeclaration": 2133,
                        "src": "1098:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "33",
                        "id": 2158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "src": "1080:1:11",
=======
                        "src": "1107:1:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "src": "1071:10:11",
=======
                      "src": "1098:10:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 2160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "src": "1082:3:11",
=======
                      "src": "1109:3:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "1071:14:11",
=======
                    "src": "1098:14:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "1045:40:11"
=======
                  "src": "1072:40:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                },
                {
                  "expression": {
                    "id": 2165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2163,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "referencedDeclaration": 1773,
                      "src": "1096:11:11",
=======
                      "referencedDeclaration": 2079,
                      "src": "1123:11:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 2164,
                      "name": "burn_percentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "referencedDeclaration": 1850,
                      "src": "1111:15:11",
=======
                      "referencedDeclaration": 2156,
                      "src": "1138:15:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "1096:30:11",
=======
                    "src": "1123:30:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2166,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "1096:30:11"
=======
                  "src": "1123:30:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                },
                {
                  "expression": {
                    "id": 2171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2167,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "referencedDeclaration": 1827,
                      "src": "1137:6:11",
=======
                      "referencedDeclaration": 2133,
                      "src": "1164:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2168,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1827,
                        "src": "1146:6:11",
=======
                        "referencedDeclaration": 2133,
                        "src": "1173:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 2169,
                        "name": "burn_percentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1850,
                        "src": "1155:15:11",
=======
                        "referencedDeclaration": 2156,
                        "src": "1182:15:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "src": "1146:24:11",
=======
                      "src": "1173:24:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "1137:33:11",
=======
                    "src": "1164:33:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2172,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "1137:33:11"
=======
                  "src": "1164:33:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                },
                {
                  "expression": {
                    "id": 2177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2173,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1754,
                        "src": "1181:8:11",
=======
                        "referencedDeclaration": 2060,
                        "src": "1208:8:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2175,
                      "indexExpression": {
                        "id": 2174,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1825,
                        "src": "1190:3:11",
=======
                        "referencedDeclaration": 2131,
                        "src": "1217:3:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "src": "1181:13:11",
=======
                      "src": "1208:13:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 2176,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "referencedDeclaration": 1827,
                      "src": "1198:6:11",
=======
                      "referencedDeclaration": 2133,
                      "src": "1225:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "1181:23:11",
=======
                    "src": "1208:23:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2178,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "1181:23:11"
=======
                  "src": "1208:23:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2180,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                          "src": "1231:3:11",
=======
                          "src": "1258:3:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "src": "1231:10:11",
=======
                        "src": "1258:10:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2182,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1825,
                        "src": "1243:3:11",
=======
                        "referencedDeclaration": 2131,
                        "src": "1270:3:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2183,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1827,
                        "src": "1248:6:11",
=======
                        "referencedDeclaration": 2133,
                        "src": "1275:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2179,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "referencedDeclaration": 2151,
                      "src": "1222:8:11",
=======
                      "referencedDeclaration": 1858,
                      "src": "1249:8:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "1222:33:11",
=======
                    "src": "1249:33:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2185,
                  "nodeType": "EmitStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "1217:38:11"
=======
                  "src": "1244:38:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "1319:4:11",
=======
                    "src": "1346:4:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2138,
                  "id": 2187,
                  "nodeType": "Return",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "1312:11:11"
=======
                  "src": "1339:11:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                }
              ]
            },
            "functionSelector": "a9059cbb",
            "id": 2189,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
            "nameLocation": "834:8:11",
=======
            "nameLocation": "861:8:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2135,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "897:8:11"
=======
              "src": "924:8:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            },
            "parameters": {
              "id": 2134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2131,
                  "mutability": "mutable",
                  "name": "_to",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "nameLocation": "851:3:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1883,
                  "src": "843:11:11",
=======
                  "nameLocation": "878:3:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2189,
                  "src": "870:11:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2130,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "843:7:11",
=======
                    "src": "870:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2133,
                  "mutability": "mutable",
                  "name": "_value",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "nameLocation": "864:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1883,
                  "src": "856:14:11",
=======
                  "nameLocation": "891:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2189,
                  "src": "883:14:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2132,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "856:7:11",
=======
                    "src": "883:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "842:29:11"
=======
              "src": "869:29:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            },
            "returnParameters": {
              "id": 2138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2137,
                  "mutability": "mutable",
                  "name": "success",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "nameLocation": "929:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1883,
                  "src": "924:12:11",
=======
                  "nameLocation": "956:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2189,
                  "src": "951:12:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2136,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "924:4:11",
=======
                    "src": "951:4:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "923:14:11"
            },
            "scope": 2029,
            "src": "825:506:11",
=======
              "src": "950:14:15"
            },
            "scope": 2335,
            "src": "852:506:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1830
            ],
            "body": {
              "id": 2274,
              "nodeType": "Block",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "1478:556:11",
=======
              "src": "1505:556:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
              "statements": [
                {
                  "assignments": [
                    2202
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2202,
                      "mutability": "mutable",
                      "name": "allowance_",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "nameLocation": "1497:10:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1968,
                      "src": "1489:18:11",
=======
                      "nameLocation": "1524:10:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 2274,
                      "src": "1516:18:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2201,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "src": "1489:7:11",
=======
                        "src": "1516:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2209,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 2203,
                        "name": "allowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1760,
                        "src": "1510:7:11",
=======
                        "referencedDeclaration": 2066,
                        "src": "1537:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 2205,
                      "indexExpression": {
                        "id": 2204,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1885,
                        "src": "1518:5:11",
=======
                        "referencedDeclaration": 2191,
                        "src": "1545:5:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "src": "1510:14:11",
=======
                      "src": "1537:14:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2208,
                    "indexExpression": {
                      "expression": {
                        "id": 2206,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "src": "1525:3:11",
=======
                        "src": "1552:3:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "src": "1525:10:11",
=======
                      "src": "1552:10:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "1510:26:11",
=======
                    "src": "1537:26:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "1489:47:11"
=======
                  "src": "1516:47:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 2211,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                              "referencedDeclaration": 1754,
                              "src": "1555:8:11",
=======
                              "referencedDeclaration": 2060,
                              "src": "1582:8:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2213,
                            "indexExpression": {
                              "id": 2212,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                              "referencedDeclaration": 1885,
                              "src": "1564:5:11",
=======
                              "referencedDeclaration": 2191,
                              "src": "1591:5:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                            "src": "1555:15:11",
=======
                            "src": "1582:15:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 2214,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                            "referencedDeclaration": 1889,
                            "src": "1574:6:11",
=======
                            "referencedDeclaration": 2195,
                            "src": "1601:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                          "src": "1555:25:11",
=======
                          "src": "1582:25:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2216,
                            "name": "allowance_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                            "referencedDeclaration": 1896,
                            "src": "1584:10:11",
=======
                            "referencedDeclaration": 2202,
                            "src": "1611:10:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 2217,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                            "referencedDeclaration": 1889,
                            "src": "1598:6:11",
=======
                            "referencedDeclaration": 2195,
                            "src": "1625:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                          "src": "1584:20:11",
=======
                          "src": "1611:20:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "src": "1555:49:11",
=======
                        "src": "1582:49:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2210,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "src": "1547:7:11",
=======
                      "src": "1574:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "1547:58:11",
=======
                    "src": "1574:58:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2221,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "1547:58:11"
=======
                  "src": "1574:58:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                },
                {
                  "assignments": [
                    2223
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2223,
                      "mutability": "mutable",
                      "name": "burn_percentage",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "nameLocation": "1624:15:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1968,
                      "src": "1616:23:11",
=======
                      "nameLocation": "1651:15:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 2274,
                      "src": "1643:23:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2222,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "src": "1616:7:11",
=======
                        "src": "1643:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2229,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2224,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1889,
                        "src": "1642:6:11",
=======
                        "referencedDeclaration": 2195,
                        "src": "1669:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "33",
                        "id": 2225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "src": "1651:1:11",
=======
                        "src": "1678:1:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "src": "1642:10:11",
=======
                      "src": "1669:10:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 2227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "src": "1653:3:11",
=======
                      "src": "1680:3:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "1642:14:11",
=======
                    "src": "1669:14:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "1616:40:11"
=======
                  "src": "1643:40:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                },
                {
                  "expression": {
                    "id": 2232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2230,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "referencedDeclaration": 1773,
                      "src": "1667:11:11",
=======
                      "referencedDeclaration": 2079,
                      "src": "1694:11:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 2231,
                      "name": "burn_percentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "referencedDeclaration": 1917,
                      "src": "1682:15:11",
=======
                      "referencedDeclaration": 2223,
                      "src": "1709:15:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "1667:30:11",
=======
                    "src": "1694:30:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2233,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "1667:30:11"
=======
                  "src": "1694:30:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                },
                {
                  "expression": {
                    "id": 2238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2234,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "referencedDeclaration": 1889,
                      "src": "1708:6:11",
=======
                      "referencedDeclaration": 2195,
                      "src": "1735:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2235,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1889,
                        "src": "1717:6:11",
=======
                        "referencedDeclaration": 2195,
                        "src": "1744:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 2236,
                        "name": "burn_percentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1917,
                        "src": "1726:15:11",
=======
                        "referencedDeclaration": 2223,
                        "src": "1753:15:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "src": "1717:24:11",
=======
                      "src": "1744:24:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "1708:33:11",
=======
                    "src": "1735:33:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2239,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "1708:33:11"
=======
                  "src": "1735:33:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                },
                {
                  "expression": {
                    "id": 2244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2240,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1754,
                        "src": "1752:8:11",
=======
                        "referencedDeclaration": 2060,
                        "src": "1779:8:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2242,
                      "indexExpression": {
                        "id": 2241,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1887,
                        "src": "1761:3:11",
=======
                        "referencedDeclaration": 2193,
                        "src": "1788:3:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "src": "1752:13:11",
=======
                      "src": "1779:13:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 2243,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "referencedDeclaration": 1889,
                      "src": "1769:6:11",
=======
                      "referencedDeclaration": 2195,
                      "src": "1796:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "1752:23:11",
=======
                    "src": "1779:23:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2245,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "1752:23:11"
=======
                  "src": "1779:23:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                },
                {
                  "expression": {
                    "id": 2250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2246,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1754,
                        "src": "1786:8:11",
=======
                        "referencedDeclaration": 2060,
                        "src": "1813:8:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2248,
                      "indexExpression": {
                        "id": 2247,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1885,
                        "src": "1795:5:11",
=======
                        "referencedDeclaration": 2191,
                        "src": "1822:5:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "src": "1786:15:11",
=======
                      "src": "1813:15:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 2249,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "referencedDeclaration": 1889,
                      "src": "1805:6:11",
=======
                      "referencedDeclaration": 2195,
                      "src": "1832:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "1786:25:11",
=======
                    "src": "1813:25:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2251,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "1786:25:11"
=======
                  "src": "1813:25:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2252,
                      "name": "allowance_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "referencedDeclaration": 1896,
                      "src": "1826:10:11",
=======
                      "referencedDeclaration": 2202,
                      "src": "1853:10:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 2253,
                      "name": "MAX_UINT256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "referencedDeclaration": 1748,
                      "src": "1839:11:11",
=======
                      "referencedDeclaration": 2054,
                      "src": "1866:11:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "1826:24:11",
=======
                    "src": "1853:24:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2265,
                  "nodeType": "IfStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "1822:93:11",
=======
                  "src": "1849:93:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                  "trueBody": {
                    "id": 2264,
                    "nodeType": "Block",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "1852:63:11",
=======
                    "src": "1879:63:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "statements": [
                      {
                        "expression": {
                          "id": 2262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 2255,
                                "name": "allowed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                                "referencedDeclaration": 1760,
                                "src": "1867:7:11",
=======
                                "referencedDeclaration": 2066,
                                "src": "1894:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 2259,
                              "indexExpression": {
                                "id": 2256,
                                "name": "_from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                                "referencedDeclaration": 1885,
                                "src": "1875:5:11",
=======
                                "referencedDeclaration": 2191,
                                "src": "1902:5:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                              "src": "1867:14:11",
=======
                              "src": "1894:14:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2260,
                            "indexExpression": {
                              "expression": {
                                "id": 2257,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                                "src": "1882:3:11",
=======
                                "src": "1909:3:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2258,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                              "src": "1882:10:11",
=======
                              "src": "1909:10:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                            "src": "1867:26:11",
=======
                            "src": "1894:26:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 2261,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                            "referencedDeclaration": 1889,
                            "src": "1897:6:11",
=======
                            "referencedDeclaration": 2195,
                            "src": "1924:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                          "src": "1867:36:11",
=======
                          "src": "1894:36:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2263,
                        "nodeType": "ExpressionStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "src": "1867:36:11"
=======
                        "src": "1894:36:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2267,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1885,
                        "src": "1939:5:11",
=======
                        "referencedDeclaration": 2191,
                        "src": "1966:5:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2268,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1887,
                        "src": "1946:3:11",
=======
                        "referencedDeclaration": 2193,
                        "src": "1973:3:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2269,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1889,
                        "src": "1951:6:11",
=======
                        "referencedDeclaration": 2195,
                        "src": "1978:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2266,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "referencedDeclaration": 2151,
                      "src": "1930:8:11",
=======
                      "referencedDeclaration": 1858,
                      "src": "1957:8:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "1930:28:11",
=======
                    "src": "1957:28:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2271,
                  "nodeType": "EmitStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "1925:33:11"
=======
                  "src": "1952:33:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "2022:4:11",
=======
                    "src": "2049:4:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2200,
                  "id": 2273,
                  "nodeType": "Return",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "2015:11:11"
=======
                  "src": "2042:11:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                }
              ]
            },
            "functionSelector": "23b872dd",
            "id": 2275,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
            "nameLocation": "1348:12:11",
=======
            "nameLocation": "1375:12:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2197,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "1446:8:11"
=======
              "src": "1473:8:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            },
            "parameters": {
              "id": 2196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2191,
                  "mutability": "mutable",
                  "name": "_from",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "nameLocation": "1379:5:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1969,
                  "src": "1371:13:11",
=======
                  "nameLocation": "1406:5:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2275,
                  "src": "1398:13:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "1371:7:11",
=======
                    "src": "1398:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2193,
                  "mutability": "mutable",
                  "name": "_to",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "nameLocation": "1403:3:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1969,
                  "src": "1395:11:11",
=======
                  "nameLocation": "1430:3:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2275,
                  "src": "1422:11:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2192,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "1395:7:11",
=======
                    "src": "1422:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2195,
                  "mutability": "mutable",
                  "name": "_value",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "nameLocation": "1425:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1969,
                  "src": "1417:14:11",
=======
                  "nameLocation": "1452:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2275,
                  "src": "1444:14:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2194,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "1417:7:11",
=======
                    "src": "1444:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "1360:78:11"
=======
              "src": "1387:78:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            },
            "returnParameters": {
              "id": 2200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2199,
                  "mutability": "mutable",
                  "name": "success",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "nameLocation": "1469:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1969,
                  "src": "1464:12:11",
=======
                  "nameLocation": "1496:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2275,
                  "src": "1491:12:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2198,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "1464:4:11",
=======
                    "src": "1491:4:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "1463:14:11"
            },
            "scope": 2029,
            "src": "1339:695:11",
=======
              "src": "1490:14:15"
            },
            "scope": 2335,
            "src": "1366:695:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1808
            ],
            "body": {
              "id": 2287,
              "nodeType": "Block",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "2165:42:11",
=======
              "src": "2192:42:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2283,
                      "name": "balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "referencedDeclaration": 1754,
                      "src": "2183:8:11",
=======
                      "referencedDeclaration": 2060,
                      "src": "2210:8:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2285,
                    "indexExpression": {
                      "id": 2284,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "referencedDeclaration": 1971,
                      "src": "2192:6:11",
=======
                      "referencedDeclaration": 2277,
                      "src": "2219:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "2183:16:11",
=======
                    "src": "2210:16:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2282,
                  "id": 2286,
                  "nodeType": "Return",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "2176:23:11"
=======
                  "src": "2203:23:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                }
              ]
            },
            "functionSelector": "70a08231",
            "id": 2288,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
            "nameLocation": "2051:9:11",
=======
            "nameLocation": "2078:9:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2279,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "2116:8:11"
=======
              "src": "2143:8:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            },
            "parameters": {
              "id": 2278,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2277,
                  "mutability": "mutable",
                  "name": "_owner",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "nameLocation": "2069:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1982,
                  "src": "2061:14:11",
=======
                  "nameLocation": "2096:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2288,
                  "src": "2088:14:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2276,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "2061:7:11",
=======
                    "src": "2088:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "2060:16:11"
=======
              "src": "2087:16:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            },
            "returnParameters": {
              "id": 2282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2281,
                  "mutability": "mutable",
                  "name": "balance",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "nameLocation": "2151:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1982,
                  "src": "2143:15:11",
=======
                  "nameLocation": "2178:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2288,
                  "src": "2170:15:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2280,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "2143:7:11",
=======
                    "src": "2170:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "2142:17:11"
            },
            "scope": 2029,
            "src": "2042:165:11",
=======
              "src": "2169:17:15"
            },
            "scope": 2335,
            "src": "2069:165:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1840
            ],
            "body": {
              "id": 2316,
              "nodeType": "Block",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "2337:179:11",
=======
              "src": "2364:179:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
              "statements": [
                {
                  "expression": {
                    "id": 2305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2298,
                          "name": "allowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                          "referencedDeclaration": 1760,
                          "src": "2348:7:11",
=======
                          "referencedDeclaration": 2066,
                          "src": "2375:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 2302,
                        "indexExpression": {
                          "expression": {
                            "id": 2299,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                            "src": "2356:3:11",
=======
                            "src": "2383:3:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                          "src": "2356:10:11",
=======
                          "src": "2383:10:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "src": "2348:19:11",
=======
                        "src": "2375:19:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2303,
                      "indexExpression": {
                        "id": 2301,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1984,
                        "src": "2368:8:11",
=======
                        "referencedDeclaration": 2290,
                        "src": "2395:8:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "src": "2348:29:11",
=======
                      "src": "2375:29:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2304,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "referencedDeclaration": 1986,
                      "src": "2380:6:11",
=======
                      "referencedDeclaration": 2292,
                      "src": "2407:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "2348:38:11",
=======
                    "src": "2375:38:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2306,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "2348:38:11"
=======
                  "src": "2375:38:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2308,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                          "src": "2411:3:11",
=======
                          "src": "2438:3:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "src": "2411:10:11",
=======
                        "src": "2438:10:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2310,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1984,
                        "src": "2423:8:11",
=======
                        "referencedDeclaration": 2290,
                        "src": "2450:8:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2311,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1986,
                        "src": "2433:6:11",
=======
                        "referencedDeclaration": 2292,
                        "src": "2460:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2307,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "referencedDeclaration": 2159,
                      "src": "2402:8:11",
=======
                      "referencedDeclaration": 1866,
                      "src": "2429:8:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "2402:38:11",
=======
                    "src": "2429:38:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2313,
                  "nodeType": "EmitStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "2397:43:11"
=======
                  "src": "2424:43:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "2504:4:11",
=======
                    "src": "2531:4:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2297,
                  "id": 2315,
                  "nodeType": "Return",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "2497:11:11"
=======
                  "src": "2524:11:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                }
              ]
            },
            "functionSelector": "095ea7b3",
            "id": 2317,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
            "nameLocation": "2224:7:11",
=======
            "nameLocation": "2251:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2294,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "2291:8:11"
=======
              "src": "2318:8:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            },
            "parameters": {
              "id": 2293,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2290,
                  "mutability": "mutable",
                  "name": "_spender",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "nameLocation": "2240:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2011,
                  "src": "2232:16:11",
=======
                  "nameLocation": "2267:8:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2317,
                  "src": "2259:16:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2289,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "2232:7:11",
=======
                    "src": "2259:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2292,
                  "mutability": "mutable",
                  "name": "_value",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "nameLocation": "2258:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2011,
                  "src": "2250:14:11",
=======
                  "nameLocation": "2285:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2317,
                  "src": "2277:14:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2291,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "2250:7:11",
=======
                    "src": "2277:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "2231:34:11"
=======
              "src": "2258:34:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            },
            "returnParameters": {
              "id": 2297,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2296,
                  "mutability": "mutable",
                  "name": "success",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "nameLocation": "2323:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2011,
                  "src": "2318:12:11",
=======
                  "nameLocation": "2350:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2317,
                  "src": "2345:12:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2295,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "2318:4:11",
=======
                    "src": "2345:4:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "2317:14:11"
            },
            "scope": 2029,
            "src": "2215:301:11",
=======
              "src": "2344:14:15"
            },
            "scope": 2335,
            "src": "2242:301:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1850
            ],
            "body": {
              "id": 2333,
              "nodeType": "Block",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "2667:51:11",
=======
              "src": "2694:51:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 2327,
                        "name": "allowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1760,
                        "src": "2685:7:11",
=======
                        "referencedDeclaration": 2066,
                        "src": "2712:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 2329,
                      "indexExpression": {
                        "id": 2328,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 2013,
                        "src": "2693:6:11",
=======
                        "referencedDeclaration": 2319,
                        "src": "2720:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "src": "2685:15:11",
=======
                      "src": "2712:15:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2331,
                    "indexExpression": {
                      "id": 2330,
                      "name": "_spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "referencedDeclaration": 2015,
                      "src": "2701:8:11",
=======
                      "referencedDeclaration": 2321,
                      "src": "2728:8:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "2685:25:11",
=======
                    "src": "2712:25:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2326,
                  "id": 2332,
                  "nodeType": "Return",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "2678:32:11"
=======
                  "src": "2705:32:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                }
              ]
            },
            "functionSelector": "dd62ed3e",
            "id": 2334,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
            "nameLocation": "2533:9:11",
=======
            "nameLocation": "2560:9:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2323,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "2616:8:11"
=======
              "src": "2643:8:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            },
            "parameters": {
              "id": 2322,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2319,
                  "mutability": "mutable",
                  "name": "_owner",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "nameLocation": "2551:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2028,
                  "src": "2543:14:11",
=======
                  "nameLocation": "2578:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2334,
                  "src": "2570:14:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2318,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "2543:7:11",
=======
                    "src": "2570:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2321,
                  "mutability": "mutable",
                  "name": "_spender",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "nameLocation": "2567:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2028,
                  "src": "2559:16:11",
=======
                  "nameLocation": "2594:8:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2334,
                  "src": "2586:16:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2320,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "2559:7:11",
=======
                    "src": "2586:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "2542:34:11"
=======
              "src": "2569:34:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            },
            "returnParameters": {
              "id": 2326,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2325,
                  "mutability": "mutable",
                  "name": "remaining",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "nameLocation": "2651:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2028,
                  "src": "2643:17:11",
=======
                  "nameLocation": "2678:9:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2334,
                  "src": "2670:17:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2324,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "2643:7:11",
=======
                    "src": "2670:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "2642:19:11"
            },
            "scope": 2029,
            "src": "2524:194:11",
=======
              "src": "2669:19:15"
            },
            "scope": 2335,
            "src": "2551:194:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
        "scope": 2030,
        "src": "59:2686:11",
        "usedErrors": []
      }
    ],
    "src": "0:2745:11"
=======
        "scope": 2336,
        "src": "59:2713:15",
        "usedErrors": []
      }
    ],
    "src": "0:2772:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Token.sol",
    "exportedSymbols": {
      "IERC20": [
        1867
      ],
      "Token": [
        2335
      ]
    },
    "id": 2336,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2044,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:33:15"
      },
      {
        "absolutePath": "project:/contracts/IERC20.sol",
        "file": "./IERC20.sol",
        "id": 2045,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2336,
        "sourceUnit": 1868,
        "src": "35:22:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2046,
              "name": "IERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1867,
              "src": "77:6:15"
            },
            "id": 2047,
            "nodeType": "InheritanceSpecifier",
            "src": "77:6:15"
          }
        ],
        "canonicalName": "Token",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2335,
        "linearizedBaseContracts": [
          2335,
          1867
        ],
        "name": "Token",
        "nameLocation": "68:5:15",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 2054,
            "mutability": "constant",
            "name": "MAX_UINT256",
            "nameLocation": "115:11:15",
            "nodeType": "VariableDeclaration",
            "scope": 2335,
            "src": "90:49:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2048,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "90:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                "typeString": "int_const 1157...(70 digits omitted)...9935"
              },
              "id": 2053,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                  "typeString": "int_const 1157...(70 digits omitted)...9936"
                },
                "id": 2051,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "32",
                  "id": 2049,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "129:1:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_2_by_1",
                    "typeString": "int_const 2"
                  },
                  "value": "2"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "hexValue": "323536",
                  "id": 2050,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "132:3:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_256_by_1",
                    "typeString": "int_const 256"
                  },
                  "value": "256"
                },
                "src": "129:6:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                  "typeString": "int_const 1157...(70 digits omitted)...9936"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "-",
              "rightExpression": {
                "hexValue": "31",
                "id": 2052,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "138:1:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1_by_1",
                  "typeString": "int_const 1"
                },
                "value": "1"
              },
              "src": "129:10:15",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                "typeString": "int_const 1157...(70 digits omitted)...9935"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "07546172",
            "id": 2056,
            "mutability": "mutable",
            "name": "minter",
            "nameLocation": "161:6:15",
            "nodeType": "VariableDeclaration",
            "scope": 2335,
            "src": "146:21:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2055,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "146:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "27e235e3",
            "id": 2060,
            "mutability": "mutable",
            "name": "balances",
            "nameLocation": "209:8:15",
            "nodeType": "VariableDeclaration",
            "scope": 2335,
            "src": "174:43:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 2059,
              "keyType": {
                "id": 2057,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "182:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "174:27:15",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 2058,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "193:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5c658165",
            "id": 2066,
            "mutability": "mutable",
            "name": "allowed",
            "nameLocation": "279:7:15",
            "nodeType": "VariableDeclaration",
            "scope": 2335,
            "src": "224:62:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 2065,
              "keyType": {
                "id": 2061,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "232:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "224:47:15",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 2064,
                "keyType": {
                  "id": 2062,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "251:7:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "243:27:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 2063,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "262:7:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 2069,
            "mutability": "constant",
            "name": "name",
            "nameLocation": "310:4:15",
            "nodeType": "VariableDeclaration",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
            "scope": 2029,
            "src": "294:35:11",
=======
            "scope": 2335,
            "src": "293:36:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 2067,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "293:6:15",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "hexValue": "4175746f436f696e",
              "id": 1762,
=======
              "hexValue": "4175746f72436f696e",
              "id": 2068,
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "319:10:11",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_b981feb3c569ba5849ce6e2d832fe62f5983d9c6219262e900ed250434da6779",
                "typeString": "literal_string \"AutoCoin\""
              },
              "value": "AutoCoin"
=======
              "src": "318:11:15",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_35acddecbe41e1f9e5003f0f7b6add7551df5b9720dcf9067695592b95cb3ce3",
                "typeString": "literal_string \"AutorCoin\""
              },
              "value": "AutorCoin"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "functionSelector": "313ce567",
            "id": 2072,
            "mutability": "constant",
            "name": "decimals",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
            "nameLocation": "357:8:11",
            "nodeType": "VariableDeclaration",
            "scope": 2029,
            "src": "336:34:11",
=======
            "nameLocation": "357:8:15",
            "nodeType": "VariableDeclaration",
            "scope": 2335,
            "src": "336:34:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int8",
              "typeString": "int8"
            },
            "typeName": {
              "id": 2070,
              "name": "int8",
              "nodeType": "ElementaryTypeName",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "336:4:11",
=======
              "src": "336:4:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
              "typeDescriptions": {
                "typeIdentifier": "t_int8",
                "typeString": "int8"
              }
            },
            "value": {
              "hexValue": "3130",
              "id": 2071,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "368:2:11",
=======
              "src": "368:2:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "95d89b41",
            "id": 2074,
            "mutability": "mutable",
            "name": "symbol",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
            "nameLocation": "391:6:11",
            "nodeType": "VariableDeclaration",
            "scope": 2029,
            "src": "377:20:11",
=======
            "nameLocation": "391:6:15",
            "nodeType": "VariableDeclaration",
            "scope": 2335,
            "src": "377:20:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2073,
              "name": "string",
              "nodeType": "ElementaryTypeName",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "377:6:11",
=======
              "src": "377:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "18160ddd",
            "id": 2079,
            "mutability": "mutable",
            "name": "totalSupply",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
            "nameLocation": "419:11:11",
            "nodeType": "VariableDeclaration",
            "scope": 2029,
            "src": "404:35:11",
=======
            "nameLocation": "419:11:15",
            "nodeType": "VariableDeclaration",
            "scope": 2335,
            "src": "404:35:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2075,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "404:7:11",
=======
              "src": "404:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "id": 2078,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3130",
                "id": 2076,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                "src": "433:2:11",
=======
                "src": "433:2:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "hexValue": "3138",
                "id": 2077,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                "src": "437:2:11",
=======
                "src": "437:2:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_18_by_1",
                  "typeString": "int_const 18"
                },
                "value": "18"
              },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "433:6:11",
=======
              "src": "433:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              }
            },
            "visibility": "public"
          },
          {
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
=======
            "constant": false,
            "id": 2081,
            "mutability": "mutable",
            "name": "timeSinceLastReward",
            "nameLocation": "463:19:15",
            "nodeType": "VariableDeclaration",
            "scope": 2335,
            "src": "447:35:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2080,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "447:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            "body": {
              "id": 2093,
              "nodeType": "Block",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "462:93:11",
              "statements": [
                {
                  "expression": {
                    "id": 1778,
=======
              "src": "504:78:15",
              "statements": [
                {
                  "expression": {
                    "id": 2087,
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "id": 1776,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1768,
                      "src": "473:6:11",
=======
                      "id": 2084,
                      "name": "minter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2056,
                      "src": "515:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "hexValue": "415443",
                      "id": 1777,
=======
                      "expression": {
                        "id": 2085,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "524:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2086,
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "nodeType": "Literal",
                      "src": "482:5:11",
=======
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "524:10:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_d8c2c2ecaf186c5f218d30e392a4cc080daeaf4b15f1f69eeec142250a711720",
                        "typeString": "literal_string \"ATC\""
                      },
                      "value": "ATC"
                    },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "473:14:11",
=======
                    "src": "515:19:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "id": 1779,
                  "nodeType": "ExpressionStatement",
                  "src": "473:14:11"
=======
                  "id": 2088,
                  "nodeType": "ExpressionStatement",
                  "src": "515:19:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                },
                {
                  "expression": {
                    "id": 2091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "baseExpression": {
                        "id": 1780,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1754,
                        "src": "498:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1783,
                      "indexExpression": {
                        "expression": {
                          "id": 1781,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "507:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "507:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "498:20:11",
=======
                      "id": 2089,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2074,
                      "src": "545:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "id": 1784,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1773,
                      "src": "521:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "498:34:11",
=======
                      "hexValue": "417574",
                      "id": 2090,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "554:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_437c306b8a9c6a8452fc15ed391008fda9e1e7cfe978118f554d4f1201160a58",
                        "typeString": "literal_string \"Aut\""
                      },
                      "value": "Aut"
                    },
                    "src": "545:14:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2092,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "498:34:11"
=======
                  "src": "545:14:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                }
              ]
            },
            "id": 2094,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "id": 1774,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "460:2:11"
            },
            "returnParameters": {
              "id": 1775,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "462:0:11"
            },
            "scope": 2029,
            "src": "449:106:11",
=======
              "id": 2082,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "502:2:15"
            },
            "returnParameters": {
              "id": 2083,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "504:0:15"
            },
            "scope": 2335,
            "src": "491:91:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2128,
              "nodeType": "Block",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "609:204:11",
=======
              "src": "636:204:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2100,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                            "src": "628:3:11",
=======
                            "src": "655:3:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                          "src": "628:10:11",
=======
                          "src": "655:10:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2102,
                          "name": "minter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                          "referencedDeclaration": 1750,
                          "src": "642:6:11",
=======
                          "referencedDeclaration": 2056,
                          "src": "669:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "src": "628:20:11",
=======
                        "src": "655:20:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2099,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "src": "620:7:11",
=======
                      "src": "647:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "620:29:11",
=======
                    "src": "647:29:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2105,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "620:29:11"
=======
                  "src": "647:29:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                },
                {
                  "assignments": [
                    2107
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2107,
                      "mutability": "mutable",
                      "name": "percentage",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "nameLocation": "668:10:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1822,
                      "src": "660:18:11",
=======
                      "nameLocation": "695:10:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 2128,
                      "src": "687:18:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2106,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "src": "660:7:11",
=======
                        "src": "687:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2113,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2108,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1773,
                        "src": "681:11:11",
=======
                        "referencedDeclaration": 2079,
                        "src": "708:11:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "3230",
                        "id": 2109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "src": "693:2:11",
=======
                        "src": "720:2:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20_by_1",
                          "typeString": "int_const 20"
                        },
                        "value": "20"
                      },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "src": "681:14:11",
=======
                      "src": "708:14:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 2111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "src": "696:3:11",
=======
                      "src": "723:3:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "681:18:11",
=======
                    "src": "708:18:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "660:39:11"
=======
                  "src": "687:39:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2115,
                          "name": "percentage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                          "referencedDeclaration": 1801,
                          "src": "718:10:11",
=======
                          "referencedDeclaration": 2107,
                          "src": "745:10:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 2116,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                          "referencedDeclaration": 1773,
                          "src": "732:11:11",
=======
                          "referencedDeclaration": 2079,
                          "src": "759:11:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "src": "718:25:11",
=======
                        "src": "745:25:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2114,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "src": "710:7:11",
=======
                      "src": "737:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "710:34:11",
=======
                    "src": "737:34:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2119,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "710:34:11"
=======
                  "src": "737:34:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                },
                {
                  "expression": {
                    "id": 2124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2120,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "referencedDeclaration": 1773,
                      "src": "755:11:11",
=======
                      "referencedDeclaration": 2079,
                      "src": "782:11:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2121,
                        "name": "percentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1801,
                        "src": "769:10:11",
=======
                        "referencedDeclaration": 2107,
                        "src": "796:10:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "38",
                        "id": 2122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "src": "780:1:11",
=======
                        "src": "807:1:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_8_by_1",
                          "typeString": "int_const 8"
                        },
                        "value": "8"
                      },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "src": "769:12:11",
=======
                      "src": "796:12:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "755:26:11",
=======
                    "src": "782:26:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2125,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "755:26:11"
=======
                  "src": "782:26:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "799:4:11",
=======
                    "src": "826:4:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2098,
                  "id": 2127,
                  "nodeType": "Return",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "792:11:11"
=======
                  "src": "819:11:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                }
              ]
            },
            "functionSelector": "1249c58b",
            "id": 2129,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
            "nameLocation": "574:4:11",
=======
            "nameLocation": "601:4:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2095,
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "578:2:11"
=======
              "src": "605:2:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            },
            "returnParameters": {
              "id": 2098,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2097,
                  "mutability": "mutable",
                  "name": "success",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "nameLocation": "601:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1823,
                  "src": "596:12:11",
=======
                  "nameLocation": "628:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2129,
                  "src": "623:12:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2096,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "596:4:11",
=======
                    "src": "623:4:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "595:14:11"
            },
            "scope": 2029,
            "src": "565:248:11",
=======
              "src": "622:14:15"
            },
            "scope": 2335,
            "src": "592:248:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1818
            ],
            "body": {
              "id": 2188,
              "nodeType": "Block",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "943:388:11",
=======
              "src": "970:388:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2140,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                            "referencedDeclaration": 1754,
                            "src": "962:8:11",
=======
                            "referencedDeclaration": 2060,
                            "src": "989:8:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2143,
                          "indexExpression": {
                            "expression": {
                              "id": 2141,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                              "src": "971:3:11",
=======
                              "src": "998:3:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                            "src": "971:10:11",
=======
                            "src": "998:10:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                          "src": "962:20:11",
=======
                          "src": "989:20:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2144,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                          "referencedDeclaration": 1827,
                          "src": "986:6:11",
=======
                          "referencedDeclaration": 2133,
                          "src": "1013:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "src": "962:30:11",
=======
                        "src": "989:30:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2139,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "src": "954:7:11",
=======
                      "src": "981:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "954:39:11",
=======
                    "src": "981:39:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2147,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "954:39:11"
=======
                  "src": "981:39:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                },
                {
                  "expression": {
                    "id": 2153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2148,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1754,
                        "src": "1004:8:11",
=======
                        "referencedDeclaration": 2060,
                        "src": "1031:8:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2151,
                      "indexExpression": {
                        "expression": {
                          "id": 2149,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                          "src": "1013:3:11",
=======
                          "src": "1040:3:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "src": "1013:10:11",
=======
                        "src": "1040:10:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "src": "1004:20:11",
=======
                      "src": "1031:20:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 2152,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "referencedDeclaration": 1827,
                      "src": "1028:6:11",
=======
                      "referencedDeclaration": 2133,
                      "src": "1055:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "1004:30:11",
=======
                    "src": "1031:30:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2154,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "1004:30:11"
=======
                  "src": "1031:30:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                },
                {
                  "assignments": [
                    2156
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2156,
                      "mutability": "mutable",
                      "name": "burn_percentage",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "nameLocation": "1053:15:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1882,
                      "src": "1045:23:11",
=======
                      "nameLocation": "1080:15:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 2188,
                      "src": "1072:23:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2155,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "src": "1045:7:11",
=======
                        "src": "1072:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2162,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2157,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1827,
                        "src": "1071:6:11",
=======
                        "referencedDeclaration": 2133,
                        "src": "1098:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "33",
                        "id": 2158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "src": "1080:1:11",
=======
                        "src": "1107:1:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "src": "1071:10:11",
=======
                      "src": "1098:10:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 2160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "src": "1082:3:11",
=======
                      "src": "1109:3:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "1071:14:11",
=======
                    "src": "1098:14:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "1045:40:11"
=======
                  "src": "1072:40:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                },
                {
                  "expression": {
                    "id": 2165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2163,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "referencedDeclaration": 1773,
                      "src": "1096:11:11",
=======
                      "referencedDeclaration": 2079,
                      "src": "1123:11:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 2164,
                      "name": "burn_percentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "referencedDeclaration": 1850,
                      "src": "1111:15:11",
=======
                      "referencedDeclaration": 2156,
                      "src": "1138:15:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "1096:30:11",
=======
                    "src": "1123:30:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2166,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "1096:30:11"
=======
                  "src": "1123:30:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                },
                {
                  "expression": {
                    "id": 2171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2167,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "referencedDeclaration": 1827,
                      "src": "1137:6:11",
=======
                      "referencedDeclaration": 2133,
                      "src": "1164:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2168,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1827,
                        "src": "1146:6:11",
=======
                        "referencedDeclaration": 2133,
                        "src": "1173:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 2169,
                        "name": "burn_percentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1850,
                        "src": "1155:15:11",
=======
                        "referencedDeclaration": 2156,
                        "src": "1182:15:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "src": "1146:24:11",
=======
                      "src": "1173:24:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "1137:33:11",
=======
                    "src": "1164:33:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2172,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "1137:33:11"
=======
                  "src": "1164:33:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                },
                {
                  "expression": {
                    "id": 2177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2173,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1754,
                        "src": "1181:8:11",
=======
                        "referencedDeclaration": 2060,
                        "src": "1208:8:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2175,
                      "indexExpression": {
                        "id": 2174,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1825,
                        "src": "1190:3:11",
=======
                        "referencedDeclaration": 2131,
                        "src": "1217:3:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "src": "1181:13:11",
=======
                      "src": "1208:13:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 2176,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "referencedDeclaration": 1827,
                      "src": "1198:6:11",
=======
                      "referencedDeclaration": 2133,
                      "src": "1225:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "1181:23:11",
=======
                    "src": "1208:23:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2178,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "1181:23:11"
=======
                  "src": "1208:23:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2180,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                          "src": "1231:3:11",
=======
                          "src": "1258:3:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "src": "1231:10:11",
=======
                        "src": "1258:10:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2182,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1825,
                        "src": "1243:3:11",
=======
                        "referencedDeclaration": 2131,
                        "src": "1270:3:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2183,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1827,
                        "src": "1248:6:11",
=======
                        "referencedDeclaration": 2133,
                        "src": "1275:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2179,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "referencedDeclaration": 2151,
                      "src": "1222:8:11",
=======
                      "referencedDeclaration": 1858,
                      "src": "1249:8:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "1222:33:11",
=======
                    "src": "1249:33:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2185,
                  "nodeType": "EmitStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "1217:38:11"
=======
                  "src": "1244:38:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "1319:4:11",
=======
                    "src": "1346:4:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2138,
                  "id": 2187,
                  "nodeType": "Return",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "1312:11:11"
=======
                  "src": "1339:11:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                }
              ]
            },
            "functionSelector": "a9059cbb",
            "id": 2189,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
            "nameLocation": "834:8:11",
=======
            "nameLocation": "861:8:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2135,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "897:8:11"
=======
              "src": "924:8:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            },
            "parameters": {
              "id": 2134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2131,
                  "mutability": "mutable",
                  "name": "_to",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "nameLocation": "851:3:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1883,
                  "src": "843:11:11",
=======
                  "nameLocation": "878:3:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2189,
                  "src": "870:11:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2130,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "843:7:11",
=======
                    "src": "870:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2133,
                  "mutability": "mutable",
                  "name": "_value",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "nameLocation": "864:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1883,
                  "src": "856:14:11",
=======
                  "nameLocation": "891:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2189,
                  "src": "883:14:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2132,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "856:7:11",
=======
                    "src": "883:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "842:29:11"
=======
              "src": "869:29:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            },
            "returnParameters": {
              "id": 2138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2137,
                  "mutability": "mutable",
                  "name": "success",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "nameLocation": "929:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1883,
                  "src": "924:12:11",
=======
                  "nameLocation": "956:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2189,
                  "src": "951:12:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2136,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "924:4:11",
=======
                    "src": "951:4:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "923:14:11"
            },
            "scope": 2029,
            "src": "825:506:11",
=======
              "src": "950:14:15"
            },
            "scope": 2335,
            "src": "852:506:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1830
            ],
            "body": {
              "id": 2274,
              "nodeType": "Block",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "1478:556:11",
=======
              "src": "1505:556:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
              "statements": [
                {
                  "assignments": [
                    2202
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2202,
                      "mutability": "mutable",
                      "name": "allowance_",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "nameLocation": "1497:10:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1968,
                      "src": "1489:18:11",
=======
                      "nameLocation": "1524:10:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 2274,
                      "src": "1516:18:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2201,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "src": "1489:7:11",
=======
                        "src": "1516:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2209,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 2203,
                        "name": "allowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1760,
                        "src": "1510:7:11",
=======
                        "referencedDeclaration": 2066,
                        "src": "1537:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 2205,
                      "indexExpression": {
                        "id": 2204,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1885,
                        "src": "1518:5:11",
=======
                        "referencedDeclaration": 2191,
                        "src": "1545:5:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "src": "1510:14:11",
=======
                      "src": "1537:14:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2208,
                    "indexExpression": {
                      "expression": {
                        "id": 2206,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "src": "1525:3:11",
=======
                        "src": "1552:3:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "src": "1525:10:11",
=======
                      "src": "1552:10:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "1510:26:11",
=======
                    "src": "1537:26:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "1489:47:11"
=======
                  "src": "1516:47:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 2211,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                              "referencedDeclaration": 1754,
                              "src": "1555:8:11",
=======
                              "referencedDeclaration": 2060,
                              "src": "1582:8:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2213,
                            "indexExpression": {
                              "id": 2212,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                              "referencedDeclaration": 1885,
                              "src": "1564:5:11",
=======
                              "referencedDeclaration": 2191,
                              "src": "1591:5:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                            "src": "1555:15:11",
=======
                            "src": "1582:15:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 2214,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                            "referencedDeclaration": 1889,
                            "src": "1574:6:11",
=======
                            "referencedDeclaration": 2195,
                            "src": "1601:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                          "src": "1555:25:11",
=======
                          "src": "1582:25:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2216,
                            "name": "allowance_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                            "referencedDeclaration": 1896,
                            "src": "1584:10:11",
=======
                            "referencedDeclaration": 2202,
                            "src": "1611:10:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 2217,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                            "referencedDeclaration": 1889,
                            "src": "1598:6:11",
=======
                            "referencedDeclaration": 2195,
                            "src": "1625:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                          "src": "1584:20:11",
=======
                          "src": "1611:20:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "src": "1555:49:11",
=======
                        "src": "1582:49:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2210,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "src": "1547:7:11",
=======
                      "src": "1574:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "1547:58:11",
=======
                    "src": "1574:58:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2221,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "1547:58:11"
=======
                  "src": "1574:58:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                },
                {
                  "assignments": [
                    2223
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2223,
                      "mutability": "mutable",
                      "name": "burn_percentage",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "nameLocation": "1624:15:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1968,
                      "src": "1616:23:11",
=======
                      "nameLocation": "1651:15:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 2274,
                      "src": "1643:23:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2222,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "src": "1616:7:11",
=======
                        "src": "1643:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2229,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2224,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1889,
                        "src": "1642:6:11",
=======
                        "referencedDeclaration": 2195,
                        "src": "1669:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "33",
                        "id": 2225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "src": "1651:1:11",
=======
                        "src": "1678:1:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "src": "1642:10:11",
=======
                      "src": "1669:10:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 2227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "src": "1653:3:11",
=======
                      "src": "1680:3:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "1642:14:11",
=======
                    "src": "1669:14:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "1616:40:11"
=======
                  "src": "1643:40:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                },
                {
                  "expression": {
                    "id": 2232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2230,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "referencedDeclaration": 1773,
                      "src": "1667:11:11",
=======
                      "referencedDeclaration": 2079,
                      "src": "1694:11:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 2231,
                      "name": "burn_percentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "referencedDeclaration": 1917,
                      "src": "1682:15:11",
=======
                      "referencedDeclaration": 2223,
                      "src": "1709:15:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "1667:30:11",
=======
                    "src": "1694:30:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2233,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "1667:30:11"
=======
                  "src": "1694:30:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                },
                {
                  "expression": {
                    "id": 2238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2234,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "referencedDeclaration": 1889,
                      "src": "1708:6:11",
=======
                      "referencedDeclaration": 2195,
                      "src": "1735:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2235,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1889,
                        "src": "1717:6:11",
=======
                        "referencedDeclaration": 2195,
                        "src": "1744:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 2236,
                        "name": "burn_percentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1917,
                        "src": "1726:15:11",
=======
                        "referencedDeclaration": 2223,
                        "src": "1753:15:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "src": "1717:24:11",
=======
                      "src": "1744:24:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "1708:33:11",
=======
                    "src": "1735:33:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2239,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "1708:33:11"
=======
                  "src": "1735:33:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                },
                {
                  "expression": {
                    "id": 2244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2240,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1754,
                        "src": "1752:8:11",
=======
                        "referencedDeclaration": 2060,
                        "src": "1779:8:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2242,
                      "indexExpression": {
                        "id": 2241,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1887,
                        "src": "1761:3:11",
=======
                        "referencedDeclaration": 2193,
                        "src": "1788:3:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "src": "1752:13:11",
=======
                      "src": "1779:13:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 2243,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "referencedDeclaration": 1889,
                      "src": "1769:6:11",
=======
                      "referencedDeclaration": 2195,
                      "src": "1796:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "1752:23:11",
=======
                    "src": "1779:23:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2245,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "1752:23:11"
=======
                  "src": "1779:23:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                },
                {
                  "expression": {
                    "id": 2250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2246,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1754,
                        "src": "1786:8:11",
=======
                        "referencedDeclaration": 2060,
                        "src": "1813:8:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2248,
                      "indexExpression": {
                        "id": 2247,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1885,
                        "src": "1795:5:11",
=======
                        "referencedDeclaration": 2191,
                        "src": "1822:5:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "src": "1786:15:11",
=======
                      "src": "1813:15:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 2249,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "referencedDeclaration": 1889,
                      "src": "1805:6:11",
=======
                      "referencedDeclaration": 2195,
                      "src": "1832:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "1786:25:11",
=======
                    "src": "1813:25:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2251,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "1786:25:11"
=======
                  "src": "1813:25:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2252,
                      "name": "allowance_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "referencedDeclaration": 1896,
                      "src": "1826:10:11",
=======
                      "referencedDeclaration": 2202,
                      "src": "1853:10:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 2253,
                      "name": "MAX_UINT256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "referencedDeclaration": 1748,
                      "src": "1839:11:11",
=======
                      "referencedDeclaration": 2054,
                      "src": "1866:11:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "1826:24:11",
=======
                    "src": "1853:24:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2265,
                  "nodeType": "IfStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "1822:93:11",
=======
                  "src": "1849:93:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                  "trueBody": {
                    "id": 2264,
                    "nodeType": "Block",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "1852:63:11",
=======
                    "src": "1879:63:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "statements": [
                      {
                        "expression": {
                          "id": 2262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 2255,
                                "name": "allowed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                                "referencedDeclaration": 1760,
                                "src": "1867:7:11",
=======
                                "referencedDeclaration": 2066,
                                "src": "1894:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 2259,
                              "indexExpression": {
                                "id": 2256,
                                "name": "_from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                                "referencedDeclaration": 1885,
                                "src": "1875:5:11",
=======
                                "referencedDeclaration": 2191,
                                "src": "1902:5:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                              "src": "1867:14:11",
=======
                              "src": "1894:14:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2260,
                            "indexExpression": {
                              "expression": {
                                "id": 2257,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                                "src": "1882:3:11",
=======
                                "src": "1909:3:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2258,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                              "src": "1882:10:11",
=======
                              "src": "1909:10:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                            "src": "1867:26:11",
=======
                            "src": "1894:26:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 2261,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                            "referencedDeclaration": 1889,
                            "src": "1897:6:11",
=======
                            "referencedDeclaration": 2195,
                            "src": "1924:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                          "src": "1867:36:11",
=======
                          "src": "1894:36:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2263,
                        "nodeType": "ExpressionStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "src": "1867:36:11"
=======
                        "src": "1894:36:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2267,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1885,
                        "src": "1939:5:11",
=======
                        "referencedDeclaration": 2191,
                        "src": "1966:5:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2268,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1887,
                        "src": "1946:3:11",
=======
                        "referencedDeclaration": 2193,
                        "src": "1973:3:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2269,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1889,
                        "src": "1951:6:11",
=======
                        "referencedDeclaration": 2195,
                        "src": "1978:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2266,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "referencedDeclaration": 2151,
                      "src": "1930:8:11",
=======
                      "referencedDeclaration": 1858,
                      "src": "1957:8:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "1930:28:11",
=======
                    "src": "1957:28:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2271,
                  "nodeType": "EmitStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "1925:33:11"
=======
                  "src": "1952:33:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "2022:4:11",
=======
                    "src": "2049:4:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2200,
                  "id": 2273,
                  "nodeType": "Return",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "2015:11:11"
=======
                  "src": "2042:11:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                }
              ]
            },
            "functionSelector": "23b872dd",
            "id": 2275,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
            "nameLocation": "1348:12:11",
=======
            "nameLocation": "1375:12:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2197,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "1446:8:11"
=======
              "src": "1473:8:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            },
            "parameters": {
              "id": 2196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2191,
                  "mutability": "mutable",
                  "name": "_from",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "nameLocation": "1379:5:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1969,
                  "src": "1371:13:11",
=======
                  "nameLocation": "1406:5:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2275,
                  "src": "1398:13:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "1371:7:11",
=======
                    "src": "1398:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2193,
                  "mutability": "mutable",
                  "name": "_to",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "nameLocation": "1403:3:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1969,
                  "src": "1395:11:11",
=======
                  "nameLocation": "1430:3:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2275,
                  "src": "1422:11:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2192,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "1395:7:11",
=======
                    "src": "1422:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2195,
                  "mutability": "mutable",
                  "name": "_value",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "nameLocation": "1425:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1969,
                  "src": "1417:14:11",
=======
                  "nameLocation": "1452:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2275,
                  "src": "1444:14:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2194,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "1417:7:11",
=======
                    "src": "1444:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "1360:78:11"
=======
              "src": "1387:78:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            },
            "returnParameters": {
              "id": 2200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2199,
                  "mutability": "mutable",
                  "name": "success",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "nameLocation": "1469:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1969,
                  "src": "1464:12:11",
=======
                  "nameLocation": "1496:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2275,
                  "src": "1491:12:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2198,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "1464:4:11",
=======
                    "src": "1491:4:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "1463:14:11"
            },
            "scope": 2029,
            "src": "1339:695:11",
=======
              "src": "1490:14:15"
            },
            "scope": 2335,
            "src": "1366:695:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1808
            ],
            "body": {
              "id": 2287,
              "nodeType": "Block",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "2165:42:11",
=======
              "src": "2192:42:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2283,
                      "name": "balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "referencedDeclaration": 1754,
                      "src": "2183:8:11",
=======
                      "referencedDeclaration": 2060,
                      "src": "2210:8:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2285,
                    "indexExpression": {
                      "id": 2284,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "referencedDeclaration": 1971,
                      "src": "2192:6:11",
=======
                      "referencedDeclaration": 2277,
                      "src": "2219:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "2183:16:11",
=======
                    "src": "2210:16:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2282,
                  "id": 2286,
                  "nodeType": "Return",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "2176:23:11"
=======
                  "src": "2203:23:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                }
              ]
            },
            "functionSelector": "70a08231",
            "id": 2288,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
            "nameLocation": "2051:9:11",
=======
            "nameLocation": "2078:9:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2279,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "2116:8:11"
=======
              "src": "2143:8:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            },
            "parameters": {
              "id": 2278,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2277,
                  "mutability": "mutable",
                  "name": "_owner",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "nameLocation": "2069:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1982,
                  "src": "2061:14:11",
=======
                  "nameLocation": "2096:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2288,
                  "src": "2088:14:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2276,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "2061:7:11",
=======
                    "src": "2088:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "2060:16:11"
=======
              "src": "2087:16:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            },
            "returnParameters": {
              "id": 2282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2281,
                  "mutability": "mutable",
                  "name": "balance",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "nameLocation": "2151:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1982,
                  "src": "2143:15:11",
=======
                  "nameLocation": "2178:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2288,
                  "src": "2170:15:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2280,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "2143:7:11",
=======
                    "src": "2170:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "2142:17:11"
            },
            "scope": 2029,
            "src": "2042:165:11",
=======
              "src": "2169:17:15"
            },
            "scope": 2335,
            "src": "2069:165:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1840
            ],
            "body": {
              "id": 2316,
              "nodeType": "Block",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "2337:179:11",
=======
              "src": "2364:179:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
              "statements": [
                {
                  "expression": {
                    "id": 2305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2298,
                          "name": "allowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                          "referencedDeclaration": 1760,
                          "src": "2348:7:11",
=======
                          "referencedDeclaration": 2066,
                          "src": "2375:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 2302,
                        "indexExpression": {
                          "expression": {
                            "id": 2299,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                            "src": "2356:3:11",
=======
                            "src": "2383:3:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                          "src": "2356:10:11",
=======
                          "src": "2383:10:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "src": "2348:19:11",
=======
                        "src": "2375:19:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2303,
                      "indexExpression": {
                        "id": 2301,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1984,
                        "src": "2368:8:11",
=======
                        "referencedDeclaration": 2290,
                        "src": "2395:8:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "src": "2348:29:11",
=======
                      "src": "2375:29:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2304,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "referencedDeclaration": 1986,
                      "src": "2380:6:11",
=======
                      "referencedDeclaration": 2292,
                      "src": "2407:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "2348:38:11",
=======
                    "src": "2375:38:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2306,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "2348:38:11"
=======
                  "src": "2375:38:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2308,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                          "src": "2411:3:11",
=======
                          "src": "2438:3:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "src": "2411:10:11",
=======
                        "src": "2438:10:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2310,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1984,
                        "src": "2423:8:11",
=======
                        "referencedDeclaration": 2290,
                        "src": "2450:8:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2311,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1986,
                        "src": "2433:6:11",
=======
                        "referencedDeclaration": 2292,
                        "src": "2460:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2307,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "referencedDeclaration": 2159,
                      "src": "2402:8:11",
=======
                      "referencedDeclaration": 1866,
                      "src": "2429:8:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "2402:38:11",
=======
                    "src": "2429:38:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2313,
                  "nodeType": "EmitStatement",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "2397:43:11"
=======
                  "src": "2424:43:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "2504:4:11",
=======
                    "src": "2531:4:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2297,
                  "id": 2315,
                  "nodeType": "Return",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "2497:11:11"
=======
                  "src": "2524:11:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                }
              ]
            },
            "functionSelector": "095ea7b3",
            "id": 2317,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
            "nameLocation": "2224:7:11",
=======
            "nameLocation": "2251:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2294,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "2291:8:11"
=======
              "src": "2318:8:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            },
            "parameters": {
              "id": 2293,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2290,
                  "mutability": "mutable",
                  "name": "_spender",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "nameLocation": "2240:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2011,
                  "src": "2232:16:11",
=======
                  "nameLocation": "2267:8:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2317,
                  "src": "2259:16:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2289,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "2232:7:11",
=======
                    "src": "2259:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2292,
                  "mutability": "mutable",
                  "name": "_value",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "nameLocation": "2258:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2011,
                  "src": "2250:14:11",
=======
                  "nameLocation": "2285:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2317,
                  "src": "2277:14:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2291,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "2250:7:11",
=======
                    "src": "2277:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "2231:34:11"
=======
              "src": "2258:34:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            },
            "returnParameters": {
              "id": 2297,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2296,
                  "mutability": "mutable",
                  "name": "success",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "nameLocation": "2323:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2011,
                  "src": "2318:12:11",
=======
                  "nameLocation": "2350:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2317,
                  "src": "2345:12:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2295,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "2318:4:11",
=======
                    "src": "2345:4:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "2317:14:11"
            },
            "scope": 2029,
            "src": "2215:301:11",
=======
              "src": "2344:14:15"
            },
            "scope": 2335,
            "src": "2242:301:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1850
            ],
            "body": {
              "id": 2333,
              "nodeType": "Block",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "2667:51:11",
=======
              "src": "2694:51:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 2327,
                        "name": "allowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 1760,
                        "src": "2685:7:11",
=======
                        "referencedDeclaration": 2066,
                        "src": "2712:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 2329,
                      "indexExpression": {
                        "id": 2328,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                        "referencedDeclaration": 2013,
                        "src": "2693:6:11",
=======
                        "referencedDeclaration": 2319,
                        "src": "2720:6:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "src": "2685:15:11",
=======
                      "src": "2712:15:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2331,
                    "indexExpression": {
                      "id": 2330,
                      "name": "_spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                      "referencedDeclaration": 2015,
                      "src": "2701:8:11",
=======
                      "referencedDeclaration": 2321,
                      "src": "2728:8:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "2685:25:11",
=======
                    "src": "2712:25:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2326,
                  "id": 2332,
                  "nodeType": "Return",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "src": "2678:32:11"
=======
                  "src": "2705:32:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                }
              ]
            },
            "functionSelector": "dd62ed3e",
            "id": 2334,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
            "nameLocation": "2533:9:11",
=======
            "nameLocation": "2560:9:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2323,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "2616:8:11"
=======
              "src": "2643:8:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            },
            "parameters": {
              "id": 2322,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2319,
                  "mutability": "mutable",
                  "name": "_owner",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "nameLocation": "2551:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2028,
                  "src": "2543:14:11",
=======
                  "nameLocation": "2578:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2334,
                  "src": "2570:14:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2318,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "2543:7:11",
=======
                    "src": "2570:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2321,
                  "mutability": "mutable",
                  "name": "_spender",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "nameLocation": "2567:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2028,
                  "src": "2559:16:11",
=======
                  "nameLocation": "2594:8:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2334,
                  "src": "2586:16:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2320,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "2559:7:11",
=======
                    "src": "2586:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "2542:34:11"
=======
              "src": "2569:34:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            },
            "returnParameters": {
              "id": 2326,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2325,
                  "mutability": "mutable",
                  "name": "remaining",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                  "nameLocation": "2651:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2028,
                  "src": "2643:17:11",
=======
                  "nameLocation": "2678:9:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2334,
                  "src": "2670:17:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2324,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
                    "src": "2643:7:11",
=======
                    "src": "2670:7:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
              "src": "2642:19:11"
            },
            "scope": 2029,
            "src": "2524:194:11",
=======
              "src": "2669:19:15"
            },
            "scope": 2335,
            "src": "2551:194:15",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
        "scope": 2030,
        "src": "59:2686:11",
        "usedErrors": []
      }
    ],
    "src": "0:2745:11"
=======
        "scope": 2336,
        "src": "59:2713:15",
        "usedErrors": []
      }
    ],
    "src": "0:2772:15"
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
<<<<<<< HEAD:blockchain/build/contracts/Apsota.json
      "address": "0x77Fde470B449cb47c27227632fa566D3d6DDFd9e",
      "transactionHash": "0xd876aa7c8999daa7427a5aec2ce399078dd00fe8df26b54c559c852f3f5e55cf"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-11-17T22:55:51.082Z",
=======
      "address": "0xEedBB9530316CD5C4155F8a3d576fEe57c229763",
      "transactionHash": "0x7357f0b21a91d1b980311016b34d982212b38bd771c981731a8bcc0ddb4ad09d"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-11-25T23:18:07.320Z",
>>>>>>> 7f4769b28a70ee6ed30734fe6e909c4a38e68cb3:blockchain/build/contracts/Token.json
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "params": {
          "_owner": "The address of the account owning tokens",
          "_spender": "The address of the account able to transfer the tokens"
        },
        "returns": {
          "remaining": "Amount of remaining tokens allowed to spent"
        }
      },
      "approve(address,uint256)": {
        "params": {
          "_spender": "The address of the account able to transfer the tokens",
          "_value": "The amount of tokens to be approved for transfer"
        },
        "returns": {
          "success": "Whether the approval was successful or not"
        }
      },
      "balanceOf(address)": {
        "params": {
          "_owner": "The address from which the balance will be retrieved"
        },
        "returns": {
          "balance": "The balance"
        }
      },
      "transfer(address,uint256)": {
        "params": {
          "_to": "The address of the recipient",
          "_value": "The amount of token to be transferred"
        },
        "returns": {
          "success": "Whether the transfer was successful or not"
        }
      },
      "transferFrom(address,address,uint256)": {
        "params": {
          "_from": "The address of the sender",
          "_to": "The address of the recipient",
          "_value": "The amount of token to be transferred"
        },
        "returns": {
          "success": "Whether the transfer was successful or not"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "approve(address,uint256)": {
        "notice": "`msg.sender` approves `_spender` to spend `_value` tokens"
      },
      "transfer(address,uint256)": {
        "notice": "send `_value` token to `_to` from `msg.sender`"
      },
      "transferFrom(address,address,uint256)": {
        "notice": "send `_value` token to `_to` from `_from` on the condition it is approved by `_from`"
      }
    },
    "version": 1
  }
}